/*******************************************************************
*                                                                  *
*   Drive_Table.def                                                *
*                                                                  *
*   Do not modify this file directly                               *
*   To update table, modify CDHD -Commands.xls and run the macro   *
*                                                                  *
*                                                                  *
*******************************************************************/

#define NA 0

#define COMMANDS_TABLE \
{ \
{ /* A              */ NA, NA, RD_FPTR1, ACommand, NA, 
{ /* ABCKUP         */ NA, NA, RD_DPTR, &u64_Addr_Backup_Value, NA, 
{ /* ABSOFFSET      */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Abs_Fdbk_Offset, &s64_Abs_Fdbk_Offset, 
{ /* ACC            */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_AccRate, SalAccCommand, 
{ /* ACTIVE         */ NA, NA, RD_DPTR, &AX0_s16_Active_Indication, NA, 
{ /* ADAPTIVEVBUS   */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Adaptive_Vbus, SalAdaptiveVbusCommand, 
{ /* ADDR           */ NA, NA, RD_FPTR0 | WR_FPTR0, SalRotarySwitch, SalSerComAddrWriteCommand, 
{ /* ANIN1          */ s8_Units_Analog_IO, NA, RD_DPTR, &AX0_s16_An_In_1_Filtered, NA, 
{ /* ANIN1DB        */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &AX0_u16_An_In_1_Deadband, SalAnin1DeadbandCommand, 
{ /* ANIN1FILTAFF   */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Anin1_Msq_Filt_User_Aff, SalAnin1FiltAffCommand, 
{ /* ANIN1FILTIN    */ s8_Units_Analog_IO, NA, RD_DPTR, &AX0_s16_An_In_1_Before_Msq, NA, 
{ /* ANIN1FILTMODE  */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Anin1_Msq_Fltr_Mode, SalAnin1FiltModeCommand, 
{ /* ANIN1FILTT1    */ NA, "ms", RD_DPTR | WR_FPTR0, &u32_Anin1_Msq_Filt_User_T1, SalAnin1FiltT1Command, 
{ /* ANIN1FILTT2    */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_Anin1_Msq_Filt_User_T2, SalAnin1FiltT2Command, 
{ /* ANIN1FILTVELFF */ NA, "ms", RD_DPTR | WR_FPTR0, &s32_Anin1_Msq_Filt_User_Vff, SalAnin1FiltVffCommand, 
{ /* ANIN1ISCALE    */ s8_Units_Cur_Scale, NA, RD_DPTR | WR_FPTR0, &s32_Current_Scale_In, SalIScaleInCommand, 
{ /* ANIN1LPFHZ     */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_An_Lpf_Hz_1, SalAnLpfHz1Command, 
{ /* ANIN1OFFSET    */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &s16_An_In_1_Offset_User_Setting, SalAnin1OffsetCommand, 
{ /* ANIN1VSCALE    */ s8_Units_Vel_Out_Loop_Scale, NA, RD_DPTR | WR_FPTR0, &s32_Velocity_Scale_In, SalVScaleInCommand, 
{ /* ANIN1ZERO      */ NA, NA, RD_FPTR1, SalAnzero1, NA, 
{ /* ANIN2          */ s8_Units_Analog_IO, NA, RD_DPTR, &AX0_s16_An_In_2_Filtered, NA, 
{ /* ANIN2DB        */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &AX0_u16_An_In_2_Deadband, SalAnin2DeadbandCommand, 
{ /* ANIN2ISCALE    */ s8_Units_Cur_Scale, NA, RD_DPTR | WR_FPTR0, &u32_Current_Scale_2, SalIScaleCommand2, 
{ /* ANIN2LPFHZ     */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_An_Lpf_Hz_2, SalAnLpfHz2Command, 
{ /* ANIN2MODE      */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_s16_An_In_2_Mode, SalAnin2ModeCommand, 
{ /* ANIN2OFFSET    */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &s16_An_In_2_Offset_User_Setting, SalAnin2OffsetCommand, 
{ /* ANIN2USER      */ NA, "user unit", RD_FPTR0, SalAnin2User, NA, 
{ /* ANIN2USERDEN   */ NA, "V", RD_DPTR | WR_FPTR0, &s32_Anin2_User_Den, SalAnin2UserDenCommand, 
{ /* ANIN2USERNUM   */ NA, "user unit", RD_DPTR | WR_FPTR0, &s32_Anin2_User_Num, SalAnin2UserNumCommand, 
{ /* ANIN2USEROFFSET*/ NA, "user unit", RD_DPTR | WR_DPTR, &s32_Anin2_User_Offset, &s32_Anin2_User_Offset, 
{ /* ANIN2ZERO      */ NA, NA, RD_FPTR1, SalAnzero2, NA, 
{ /* ANOUT          */ NA, "V", RD_DPTR, &s16_Analog_Out_Volt, NA, 
{ /* ANOUTCMD       */ NA, "V", RD_DPTR | WR_FPTR0, &s32_Analog_Out_Volt_Cmd, SalAnalogOutCommand, 
{ /* ANOUTISCALE    */ s8_Units_Cur_Scale, NA, RD_DPTR | WR_FPTR0, &s32_Current_Scale_Out, SalIScaleOutCommand, 
{ /* ANOUTLIM       */ NA, "V", RD_DPTR | WR_FPTR0, &u16_Analog_Out_Volt_Lim, SalAnalogOutLimCommand, 
{ /* ANOUTMODE      */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Analog_Out_Mode, SalAnOutModeCommand, 
{ /* ANOUTVSCALE    */ s8_Units_Vel_Out_Loop_Scale, NA, RD_DPTR | WR_FPTR0, &s32_Velocity_Scale_Out, SalVScaleOutCommand, 
{ /* AQBFILT        */ NA, NA, RD_DPTR | WR_DPTR, &u16_AqB_User_Filt, &u16_AqB_User_Filt, 
{ /* AT             */ NA, NA, RD_FPTR1 | WR_FPTR1, SalATStartCommand, SalATStartOptCommand, 
{ /* ATA            */ NA, NA, RD_FPTR1 | WR_FPTR1, SalATAStartCommand, SalATAStartOptCommand, 
{ /* ATLOG          */ NA, NA, RD_FCUST0, SalATLogCommand, NA, 
{ /* ATPF           */ NA, NA, RD_FPTR1 | WR_FPTR1, SalATPFStartCommand, SalATPFStartOptCommand, 
{ /* ATST           */ NA, NA, RD_FPTR1, SalATStCommand, NA, 
{ /* ATVICMDMAX     */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_ATV_Icmd_Max, NA, 
{ /* ATVMAX         */ NA, NA, RD_DPTR, &s32_ATV_Output_Max, NA, 
{ /* ATVPERTUBATE   */ NA, "mSec", RD_DPTR | WR_DPTR, &s16_ATV_Pertubation_Time, &s16_ATV_Pertubation_Time, 
{ /* AUTOHOME       */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Auto_Home_Mode, SalAutoHomeModeCommand, 
{ /* AXISNUM        */ NA, NA, RD_FPTR0, SalDDHDReadAxisNum, NA, 
{ /* BAUDRATE       */ NA, "bps", RD_DPTR | WR_FPTR0, &u32_Serial_Baud_Rate, SalSerialBaudRateCommand, 
{ /* BISSCCMD       */ NA, NA, RD_FCUST, SalBiSSCCmd, NA, 
{ /* BISSCFIELDS    */ NA, NA, RD_FCUST | WR_FCUST, SalBisscDataFieldsReadCommand, SalBisscDataFieldsWriteCommand, 
{ /* BISSCINFO      */ NA, NA, RD_FPTR1, SalBiSSCInfoCommand, NA, 
{ /* BISSCREAD      */ NA, NA, RD_FCUST, SalBiSSCRead, NA, 
{ /* BISSCWRITE     */ NA, NA, RD_FCUST, SalBiSSCWrite, NA, 
{ /* BURNIN         */ NA, NA, RD_DPTR | WR_FPTR0, &s8_BurninParam, SalBurninCommand, 
{ /* BURNINCYCLETIME*/ NA, "ms", RD_DPTR | WR_FPTR0, &s32_BurninCycleTime, SalBurninCycleTimeCommand, 
{ /* BURNINFRQ      */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_BurninFrq, SalBurninFrqCommand, 
{ /* BURNINONTIME   */ NA, "ms", RD_DPTR | WR_FPTR0, &s32_BurninOnTime, SalBurninOnTimeCommand, 
{ /* BW             */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_Bw, SalBWCommand, 
{ /* CANBITRATE     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Can_Bit_Rate, SalCanBitRate, 
{ /* CANCONTROLWORD */ NA, NA, RD_FPTR0, SalCanControlWord, NA, 
{ /* CANSTATUSWORD  */ NA, NA, RD_FPTR0, SalCanStatusWord, NA, 
{ /* CHECKSUM       */ NA, NA, RD_DPTR | WR_DPTR, &u8_ChkSm, &u8_ChkSm, 
{ /* CLEARFAULTS    */ NA, NA, RD_FPTR1, ClearFaultsCommand, NA, 
{ /* CLVD           */ s8_Units_PWM_Volts, NA, RD_DPTR, &AX0_s16_Vd, NA, 
{ /* CLVQ           */ s8_Units_PWM_Volts, NA, RD_DPTR, &AX0_s16_Vq, NA, 
{ /* COMMERRVTHRESH */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &u32_Runaway_Check_Vel_Thresh, SalSetRunawayVelocityThresholdCommand, 
{ /* COMMERRPTHRESH */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Runaway_Motor_Pos_Thresh, &s64_Runaway_Motor_Pos_Thresh, 
{ /* COMMFLTTRESH   */ NA, "deg", RD_DPTR | WR_DPTR, &u16_Comm_Flt_Threshold, &u16_Comm_Flt_Threshold, 
{ /* COMMABS1       */ NA, NA, RD_DPTR, &AX0_u32_Comm_Abs_Pos_32_Lo, NA, 
{ /* COMMABS2       */ NA, NA, RD_DPTR, &AX0_u32_Comm_Abs_Pos_32_Lo_2, NA, 
{ /* COMMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Comm_Mode, SalComModeCommand, 
{ /* CONFIG         */ NA, NA, RD_FPTR1 | WR_FCUST, SalConfigCommand, SalWriteConfigCommand, 
{ /* COUNTSINREV    */ NA, NA, RD_DPTR, &AX0_u32_Counts_Per_Rev, NA, 
{ /* CURRSTOPTRIG   */ NA, NA, RD_FPTR1 | WR_FCUST, SalCurrentTriggerReadCommand, SalCurrentTriggerWriteCommand, 
{ /* CUSTOMERID     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Customer_Id, SalCustomerIdCommand, 
{ /* CYCLEIDENTLMJR */ NA, NA, RD_FCUST, CycleLmjrCommand, NA, 
{ /* DEC            */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_DecRate, SalDecCommand, 
{ /* DECDIST        */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Dec_Dist, &s64_Dec_Dist, 
{ /* DECDIST2       */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Dec_Dist2, &s64_Dec_Dist2, 
{ /* DECSTOP        */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_DecStop, SalDecStopCommand, 
{ /* DECSTOPTIME    */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_DecStopTime, SalDecStopTimeCommand, 
{ /* DELAY          */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_DelayTime, SalDelayCommand, 
{ /* DICONT         */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Drive_I_Cont, SalDriveIContCommand, 
{ /* DIFPORTMODE    */ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadDifPortModeCommand, SalDifPortModeCommand, 
{ /* DIGINFILT      */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_Input_Filter_Depth, SalDigInFiltCommand, 
{ /* DIPEAK         */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Drive_I_Peak, SalDriveIPeakCommand, 
{ /* DIR            */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Direction, SalDirectionCommand, 
{ /* DISMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Disable_Mode_User, SalDisableModeCommand, 
{ /* DISPLAYMODE    */ NA, NA, RD_DPTR | WR_DPTR, &u16_Display_Mode, &u16_Display_Mode, 
{ /* DISPLAYTEST    */ NA, NA, RD_FCUST0, SalTestLedCommand, NA, 
{ /* DISPLAYTEST2   */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadHmiTestCommand, SalHmiTestCommand, 
{ /* DISSPEED       */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &u32_DisSpeed, SalDisSpeedCommand, 
{ /* DISTIME        */ NA, "ms", RD_DPTR | WR_DPTR, &u16_DisTime, &u16_DisTime, 
{ /* DRIVENAME      */ NA, NA, RD_FCUST | WR_FCUST, SalReadDriveName, SalSetDriveName, 
{ /* DRIVESCRIPT    */ NA, NA, RD_FCUST | WR_FCUST, SalReadScript, SalWriteScript, 
{ /* DRIVESCRIPTDEL */ NA, "ms", RD_DPTR | WR_DPTR, &u32_Script_Time_Delay, &u32_Script_Time_Delay, 
{ /* DRIVESCRIPTST  */ NA, NA, RD_FPTR1, DriveScriptStatusCommand, NA, 
{ /* DRIVETEMP      */ NA, "deg", RD_FCUST0, SalReadDriveTemp, NA, 
{ /* DUALLOOPVCMD   */ s8_Units_Vel_Ptp, NA, RD_DPTR, &AX0_s32_Dual_Loop_Vcmd, NA, 
{ /* DUMP           */ NA, NA, RD_FCUST, DumpCommand, NA, 
{ /* ECDEBUG        */ NA, NA, RD_FCUST0, SalEtherCATDebugChannel, NA, 
{ /* ECDEBUGFCT     */ NA, NA, RD_DPTR | WR_DPTR, &u16_Ecat_Debug_Function, &u16_Ecat_Debug_Function, 
{ /* ECDEBUGVAL     */ NA, NA, RD_DPTR | WR_DPTR, &s64_Ecat_Debug_Value, &s64_Ecat_Debug_Value, 
{ /* ECEMCYMODE     */ NA, NA, RD_DPTR | WR_DPTR, &u16_Emcy_Mode, &u16_Emcy_Mode, 
{ /* ECFOESSVMODE   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Ec_Foe_Ssv_Mode, &u16_Ec_Foe_Ssv_Mode, 
{ /* ECHO           */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Echo, SalEchoCommand, 
{ /* ECMAPDEFAULT   */ NA, NA, RD_FCUST, SalRestoreMappingDefault, NA, 
{ /* ECMSGBUF       */ NA, NA, RD_FCUST0, PrintOrClearEcatMessageBuffer, NA, 
{ /* ECMSGFILT      */ NA, NA, RD_FCUST0 | WR_FCUST0, ReadMessageBufferFilterVariable, WriteMessageBufferFilterVariable, 
{ /* ECPDOMAPPING   */ NA, NA, RD_FCUST0, SalWriteEtherCATPdoMappingsToRs232, NA, 
{ /* ECREADCOMMSTATE*/ NA, NA, RD_DPTR, &u16_Ec_Nmt_State, NA, 
{ /* ECSENDSDO      */ NA, NA, RD_FCUST0 | WR_FCUST0, SalEcReadSdoCommand, SalEcWriteSdoCommand, 
{ /* ECZEROMAP      */ NA, NA, RD_FCUST0, SalEcZeroMapping, NA, 
{ /* EEPROM         */ NA, NA, RD_FCUST0 | WR_FCUST0, SalEepromReadCommand, SalEepromWriteCommand, 
{ /* EEPROMDUMP     */ NA, NA, RD_FCUST0, SalEepromDumpCommand, NA, 
{ /* EEPROMSAVE     */ NA, NA, RD_FCUST0, SalEepromSaveCommand, NA, 
{ /* ELECTANGLE     */ NA, "65536/(elect cycle)", RD_DPTR, &AX0_s16_Elect_Pos_With_Phase_Adv, NA, 
{ /* EMBER          */ NA, NA, RD_FCUST0, EmberCommand, NA, 
{ /* EMEMW          */ NA, NA, RD_FCUST | WR_FCUST, ReadEndatMemoryWord, SalWriteEndatMemoryWord, 
{ /* EN             */ NA, NA, RD_FPTR1, SalEnableCommand, NA, 
{ /* ENCFOLLOWER    */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Enc_Follower_Mode, SalWriteEncoderFollower, 
{ /* ENCOUTMODE     */ NA, NA, RD_DPTR | WR_FPTR0, &u8_EncoutMode, SalEncoderSimMode, 
{ /* ENCOUTRES      */ s8_Units_Rot_Lin_ENCRES, NA, RD_DPTR | WR_FPTR0, &s32_Enc_Sim_Res, SalEncoderSimResCommand, 
{ /* ENCOUTZPOS     */ NA, "counts", RD_DPTR | WR_DPTR, &AX0_u32_Encsim_ZPos, &AX0_u32_Encsim_ZPos, 
{ /* ENCSIMTEST     */ NA, NA, RD_FCUST0 | WR_FCUST0, SalEncSimTestCommand, SalEncSimTestCommand, 
{ /* ENDATCRC       */ NA, NA, RD_FCUST0 | WR_FCUST0, SalEnDatCRCCommand, SalEnDatCRCCommand, 
{ /* ENDATERRWRN    */ NA, NA, RD_FCUST0, SalReadEnDatErrWrn, NA, 
{ /* ENDATPOS       */ NA, NA, RD_FCUST | WR_FCUST, SalEnDatPosition, SalEnDatPosition, 
{ /* ENDATREQ       */ NA, NA, RD_FCUST0 | WR_FCUST0, SalEnDatRequest, SalEnDatRequest, 
{ /* ENDATRST       */ NA, NA, RD_FCUST0 | WR_FCUST0, SalEnDatReset, SalEnDatReset, 
{ /* ERRCNTRS       */ NA, NA, RD_FCUST | WR_FCUST, SalErrorCountersCommand, SalErrorCountersCommand, 
{ /* ERRCORACTIVENUM*/ NA, NA, RD_DPTR | WR_FPTR0, &s16_Error_Correction_Active_Number, SalErrCorActiveNumber, 
{ /* ERRCOREN       */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Err_Cor_Enable, SalErrorCorrectionEnableCommand, 
{ /* ERRCORFAILINDEX*/ NA, NA, RD_DPTR, &s16_Error_Correction_Index_Failed, NA, 
{ /* ERRCORINDEX    */ NA, NA, RD_DPTR, &s16_Error_Correction_Current_Index_User, NA, 
{ /* ERRCORINTERVAL */ NA, NA, RD_DPTR | WR_FPTR0, &s64_Error_Correction_Interval_Usr, SalErrorCorrectionIntervalCommand, 
{ /* ERRCORMODMODE  */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Error_Correction_Modulu_Mode, SalErrorCorrectionModuluModeCommand, 
{ /* ERRCORRESET    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Err_Cor_Is_Reset, SalErrCorResetCommand, 
{ /* ERRCORSETINDEX */ NA, NA, RD_FPTR0 | WR_FCUST1, SalErrCorSetIndexReadCommand, SalErrCorSetIndexWriteCommand, 
{ /* ERRCORSTARTOFF */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Error_Correction_Start_Offset, SalErrCorStartOffset, 
{ /* ERRCORSTARTPOS */ NA, NA, RD_DPTR | WR_FPTR0, &s64_Error_Correction_Start_Pos_Usr, SalErrCorStartPosition, 
{ /* ERRCORTBLDBG   */ NA, NA, RD_FPTR1, ErrCorDebugTable, NA, 
{ /* ERRCORST       */ NA, NA, RD_DPTR, &AX0_s16_Error_Correction_State, NA, 
{ /* ERRCORUNITS    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Pos_Error_Correction, SalUnitsErrorCorrectionCommand, 
{ /* ESTOPILIM      */ NA, "Factor of ILIM", RD_DPTR | WR_DPTR, &s16_Ilim_Active_Disable_Factor, &s16_Ilim_Active_Disable_Factor, 
{ /* EXTADDITIVEICMD*/ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Extrn_Icmd_FF, SalExtAdditiveIcmdCommand, 
{ /* EXTADDITIVEVCMD*/ s8_Units_Vel_In_Loop, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Extrn_Vcmd_FF, SalExtAdditiveVcmdCommand, 
{ /* EXTENDCURRUNITS*/ NA, NA, RD_DPTR | WR_DPTR, &manu_spec_current_conversion_extended_units, &manu_spec_current_conversion_extended_units, 
{ /* FACTORYRESTORE */ NA, NA, RD_FCUST | WR_FCUST, SalRestoreFactorySettingsCommand, SalRestoreFactorySettingsCommand, 
{ /* FASTSTOENABLE  */ NA, NA, RD_DPTR | WR_DPTR, &u16_Fast_Sto_Enable, &u16_Fast_Sto_Enable, 
{ /* FBGDS          */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Fb_Gear_Driving_Shaft_Revs, SalFbGearDrivingShaftRevs, 
{ /* FBGMS          */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Fb_Gear_Motor_Shaft_Revs, SalFbGearMotorShaftRevs, 
{ /* FBINTTYPE      */ NA, NA, RD_FCUST0 | WR_FCUST0, SalFbInterpolationType, SalFbInterpolationType, 
{ /* FBITIDX        */ NA, NA, RD_DPTR | WR_FPTR0, &s8_Fb_Interp_Time_Idx, SalFbInterpTimeIdx, 
{ /* FBITPRD        */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Fb_Interp_Time_Period, SalFbInterpTimePeriod, 
{ /* FBOFFSETDELAY  */ NA, NA, RD_DPTR | WR_DPTR, &manu_spec_u16_offset_delay, &manu_spec_u16_offset_delay, 
{ /* FBPLIGNORE     */ NA, NA, RD_DPTR | WR_DPTR, &u8_Fb_Packet_Loss_Ignore, &u8_Fb_Packet_Loss_Ignore, 
{ /* FBSCALE        */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Fbscale, SalFbscale, 
{ /* FBSYNCACT      */ NA, "ms", RD_FPTR0, SalActualFBSyncTimeRead, NA, 
{ /* FEEDBACKBR     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Fdbk_Brate_Khz, SalFdbkBrateCommand, 
{ /* FEEDBACKTYPE   */ NA, NA, RD_DPTR | WR_FPTR0, &u16_FdbkType_User, SalFdbkCommand, 
{ /* FILTANTIVIBGAIN*/ NA, NA, RD_DPTR | WR_FPTR0, &s32_PL_Antivib3_Gain, SalLinPe3GainCommand, 
{ /* FILTANTIVIBHZ  */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_PL_Antivib3_Fcenter, SalLinPe3FcenterCommand, 
{ /* FILTANTIVIBQ   */ NA, NA, RD_DPTR | WR_FPTR0, &s32_PL_Antivib3_Q_Gain, SalLinPe3QGainCommand, 
{ /* FILTANTIVIBSHRP*/ NA, NA, RD_DPTR | WR_FPTR0, &u16_PL_Antivib3_Sharpness, SalLinPe3SharpnessCommand, 
{ /* FILTEXTHZ1     */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_Ext_VFO_Hz1, SalExtVFOHz1Command, 
{ /* FILTEXTHZ2     */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_Ext_VFO_Hz2, SalExtVFOHz2Command, 
{ /* FILTEXTMODE    */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Ext_VFO_Mode, SalExtFiltModeCommand, 
{ /* FILTHZ1        */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_VFO_Hz1, SalVFOHz1Command, 
{ /* FILTHZ2        */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_VFO_Hz2, SalVFOHz2Command, 
{ /* FILTMODE       */ NA, NA, RD_DPTR | WR_FPTR0, &u8_VFO_Mode, SalFiltModeCommand, 
{ /* FLT            */ NA, NA, RD_FPTR1, PrintCurrentFaults, NA, 
{ /* FLTHIST        */ NA, NA, RD_FCUST, PrintFaultLog, NA, 
{ /* FLTMASK        */ NA, NA, RD_FCUST | WR_FCUST, SalReadUserFltsMask, SalSetUserFltsMask, 
{ /* FLTCLRMODE     */ NA, NA, RD_DPTR | WR_DPTR, &u16_Flts_Clr_Mod_Flags, &u16_Flts_Clr_Mod_Flags, 
{ /* FOLD           */ NA, NA, RD_DPTR, &u16_Fold, NA, 
{ /* FORCEKEY       */ NA, NA, RD_FCUST | WR_FCUST, SalForceKey, SalWriteForceKeyCommand, 
{ /* FRICINEG       */ s8_Units_Cur, NA, RD_DPTR | WR_DPTR, &AX0_s16_Ifric_Neg, &AX0_s16_Ifric_Neg, 
{ /* FRICIPOS       */ s8_Units_Cur, NA, RD_DPTR | WR_DPTR, &AX0_s16_Ifric_Pos, &AX0_s16_Ifric_Pos, 
{ /* FRICNVHYST     */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_Weight_Neg_Vel_Hyst, SalWeightCompNegVelHystCommand, 
{ /* FRICPVHYST     */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_Weight_Pos_Vel_Hyst, SalWeightCompPosVelHystCommand, 
{ /* GAINSET        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_AT_Row, SalATRowCommand, 
{ /* GAINSETMONITOR */ NA, NA, NA | WR_FPTR1, NA, SalGainSetMonitor, 
{ /* GAINSETMOVE    */ NA, NA, RD_FPTR1, SalATBackAndForth, NA, 
{ /* GAINSETPFMOVE  */ NA, NA, RD_FPTR1, SalATPFBackAndForth, NA, 
{ /* GAINSETPFRESET */ NA, NA, RD_FPTR1, SalATPathFollowingReset, NA, 
{ /* GAINSETPFTRAJ  */ NA, NA, RD_FPTR0 | WR_FPTR0, SalReadGainSetPFTrajCommand, SalGainSetPFTrajCommand, 
{ /* GAINSETRESET   */ NA, NA, RD_FPTR1, SalATResetVarCommand, NA, 
{ /* GAINSETVALIDATE*/ NA, NA, NA | WR_FPTR0, NA, SalGainSetValidate, 
{ /* GANTRYALIGN    */ NA, NA, RD_FCUST, SalGantryAlignCommand, NA, 
{ /* GANTRYALIGNED  */ NA, NA, RD_DPTR, &u8_Gantry_Aligned, NA, 
{ /* GANTRYALIGNMODE*/ NA, NA, RD_DPTR | WR_FPTR0, &s16_Gantry_Align_Mode_User, SalGantryAlignModeWriteCommand, 
{ /* GANTRYCMDTYPE  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Gantry_Cmd_Type, SalGantryCmdTypeCommand, 
{ /* GANTRYCOMMSTATE*/ NA, NA, RD_DPTR, &s8_Gantry_Comm_State, NA, 
{ /* GANTRYCOMMTYPE */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Gantry_Comm_Type, SalGantryCommType, 
{ /* GANTRYDIFFICMD */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Gantry_Control_Diff_Icmd, NA, 
{ /* GANTRYDIFFPFB  */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Gantry_Control_Diff_Pfb_Lo, NA, 
{ /* GANTRYDIFFVFB  */ s8_Units_Vel_Out_Loop, NA, RD_DPTR, &AX0_s32_Gantry_Control_Diff_Vfb, NA, 
{ /* GANTRYFINDOFF  */ NA, NA, RD_FCUST, SalGantryFindOffCommand, NA, 
{ /* GANTRYFINDOFFST*/ NA, NA, RD_FPTR1, SalGantryFindOffStCommand, NA, 
{ /* GANTRYFULLPFB  */ NA, NA, RD_DPTR | WR_FPTR0, &u8_Gantry_Full_Pfb, SalGantryFullPfbCommand, 
{ /* GANTRYHWTEST   */ NA, NA, RD_FCUST, SalGantryHwTest, NA, 
{ /* GANTRYINTERFACE*/ NA, NA, RD_DPTR | WR_FPTR0, &u8_Gantry_Interface, SalGantryInterfaceCommand, 
{ /* GANTRYMODE     */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Gantry_Mode, SalGantryModeCommand, 
{ /* GANTRYMSTRICMD */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Gantry_Control_Mstr_Icmd, NA, 
{ /* GANTRYMSTRPFB  */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Gantry_Control_Mstr_Pfb_Lo, NA, 
{ /* GANTRYMSTRVFB  */ s8_Units_Vel_Out_Loop, NA, RD_DPTR, &AX0_s32_Gantry_Control_Mstr_Vfb, NA, 
{ /* GANTRYOFFSET   */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &s64_Gantry_Diff_Zero_Position, SalGantryOffsetWriteCommand, 
{ /* GANTRYOFFSETST */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Gantry_Offset_Valid, SalGantryOffsetStWriteCommand, 
{ /* GANTRYPRTNRICMD*/ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Gantry_Partners_Axis_Icmd, NA, 
{ /* GANTRYPRTNRMFB */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Gantry_Control_Partner_Axis_Pfb_Lo, NA, 
{ /* GANTRYPRTNRVFB */ s8_Units_Vel_Out_Loop, NA, RD_DPTR, &AX0_s32_Gantry_Partners_Axis_Velocity_8khz, NA, 
{ /* GANTRYTYPE     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Gantry_Type, SalGantryTypeCommand, 
{ /* GEAR           */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u8_Gear_Active, SalGearActiveCommand, 
{ /* GEARACC        */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR, &AX0_s32_Gear_Acc_Out, NA, 
{ /* GEARACCTHRESH  */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_Gear_Acc_Tresh, SalGearAccTreshCommand, 
{ /* GEARDBVAL      */ NA, NA, RD_FCUST | WR_FCUST, SalGearDeadBandLimit, SalGearDeadBandLimit, 
{ /* GEARFILTAFF    */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Gear_Filt_User_Aff, SalGearFiltAffCommand, 
{ /* GEARFILTDEPTH  */ NA, "ms", RD_DPTR | WR_FPTR0, &u32_Gear_Filt_User_Depth, SalGearFiltDepthCommand, 
{ /* GEARFILTMODE   */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Qep_Msq_Fltr_Mode, SalGearFiltModeCommand, 
{ /* GEARFILTT1     */ NA, "ms", RD_DPTR | WR_FPTR0, &u32_Gear_Filt_User_T1, SalGearFiltT1Command, 
{ /* GEARFILTT2     */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_Gear_Filt_User_T2, SalGearFiltT2Command, 
{ /* GEARFILTVELFF  */ NA, "ms", RD_DPTR | WR_FPTR0, &s32_Gear_Filt_User_Vff, SalGearFiltVffCommand, 
{ /* GEARIN         */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_s32_Gearin, SalGearInCommand, 
{ /* GEARINMODE     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Gear_In_Mode, SalGearInModeCommand, 
{ /* GEARLIMITSMODE */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u8_Gear_Limits_Mode, SalGearLimitsModeCommand, 
{ /* GEARMODE       */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u8_Gear_Mode, SalGearModeCommand, 
{ /* GEAROUT        */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Gearout_Design, SalGearOutCommand, 
{ /* GET            */ NA, NA, RD_FCUST0 | WR_FPTR0, GetRecordCommand, GetVarRecordCommand, 
{ /* GETDEBUGLOG    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Get_Debug_Log_Flag, SalClearDebugLog, 
{ /* GETMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Get_Mode, SalGetModeCommand, 
{ /* GETREC         */ NA, NA, RD_FCUST | WR_FCUST, GetRecordRptCommand, GetRecordRptCommand, 
{ /* GUIPARAM       */ NA, NA, RD_FPTR1, GuiParamCommand, NA, 
{ /* HALLS          */ NA, NA, RD_FPTR1, SalReadHallsCommand, NA, 
{ /* HALLSCOMMTHRESH*/ NA, "Hz", RD_DPTR | WR_DPTR, &u16_Halls_Comm_Switch_Thresh, &u16_Halls_Comm_Switch_Thresh, 
{ /* HALLSFILTAFF   */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Halls_Msq_Filt_User_Aff, SalHallsFiltAffCommand, 
{ /* HALLSFILTT1    */ NA, "ms", RD_DPTR | WR_FPTR0, &u32_Halls_Msq_Filt_User_T1, SalHallsFiltT1Command, 
{ /* HALLSFILTT2    */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_Halls_Msq_Filt_User_T2, SalHallsFiltT2Command, 
{ /* HALLSFILTVELFF */ NA, "ms", RD_DPTR | WR_FPTR0, &s32_Halls_Msq_Filt_User_Vff, SalHallsFiltVffCommand, 
{ /* HALLSINV       */ NA, NA, RD_FCUST | WR_FCUST, SalHallsInversionCommand, SalHallsInversionCommand, 
{ /* HALLSONLYCOMM  */ NA, NA, RD_DPTR | WR_DPTR, &u16_Halls_Only_Comm_Source, &u16_Halls_Only_Comm_Source, 
{ /* HALLSTYPE      */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Halls_Type, SalHallsTypeCommand, 
{ /* HCFB           */ s8_Units_Pos, NA, RD_DPTR, &AX0_s32_Fb_Harmonic_Correction_Act, NA, 
{ /* HCFB1AMP       */ NA, NA, RD_FCUST | WR_FCUST, SalReadHcFb1AmpCommand, SalHcFb1AmpCommand, 
{ /* HCFB1NUM       */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Fb_Harmonic_Num_1, &AX0_s16_Fb_Harmonic_Num_1, 
{ /* HCFB1PHASE     */ NA, "deg", RD_FPTR0 | WR_FPTR0, SalReadHcFb1PhaseCommand, SalHcFb1PhaseCommand, 
{ /* HCFB2AMP       */ NA, NA, RD_FCUST | WR_FCUST, SalReadHcFb2AmpCommand, SalHcFb2AmpCommand, 
{ /* HCFB2NUM       */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Fb_Harmonic_Num_2, &AX0_s16_Fb_Harmonic_Num_2, 
{ /* HCFB2PHASE     */ NA, "deg", RD_FPTR0 | WR_FPTR0, SalReadHcFb2PhaseCommand, SalHcFb2PhaseCommand, 
{ /* HCICMD         */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Icmd_Harmonic_Correction, NA, 
{ /* HCICMD1AMP     */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Icmd_Harmonic_Amp_1, SalHcIcmd1AmpCommand, 
{ /* HCICMD1NUM     */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Icmd_Harmonic_Num_1, &AX0_s16_Icmd_Harmonic_Num_1, 
{ /* HCICMD1PHASE   */ NA, "deg", RD_FPTR0 | WR_FPTR0, SalReadHcIcmd1PhaseCommand, SalHcIcmd1PhaseCommand, 
{ /* HCICMD2AMP     */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Icmd_Harmonic_Amp_2, SalHcIcmd2AmpCommand, 
{ /* HCICMD2NUM     */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Icmd_Harmonic_Num_2, &AX0_s16_Icmd_Harmonic_Num_2, 
{ /* HCICMD2PHASE   */ NA, "deg", RD_FPTR0 | WR_FPTR0, SalReadHcIcmd2PhaseCommand, SalHcIcmd2PhaseCommand, 
{ /* HCPHASE        */ NA, "deg", RD_FPTR0, SalReadHcPhaseCommand, NA, 
{ /* HCTUNE         */ NA, NA, RD_FCUST | WR_FCUST, SalReadAutoHcCommand, SalAutoHcCommand, 
{ /* HCTUNEST       */ NA, NA, RD_FPTR0, HcTuneStatusCommand, NA, 
{ /* HDSLWRITE      */ NA, NA, RD_FCUST, SalHdslWriteCmd, NA, 
{ /* MASTERREAD     */ NA, NA, RD_FCUST, SalHdslMasterReadCmd, NA, 
{ /* HDSLREAD       */ NA, NA, RD_FCUST, SalHdslReadCmd, NA, 
{ /* HDSLMODE       */ NA, NA, RD_DPTR | WR_DPTR, &s16_Hdsl_Mode, &s16_Hdsl_Mode, 
{ /* HDSLJOG        */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Hdsl_Jog_Speed, SalHdslSetOpenLoopJogCmd, 
{ /* HDSLINFO       */ NA, NA, RD_FPTR1, SalReadHdslInfoCmd, NA, 
{ /* HDSLRES        */ NA, NA, RD_DPTR, &AX0_u16_Hdsl_St_Res, NA, 
{ /* HDTUNE         */ NA, NA, RD_DPTR | WR_FCUST, &s16_Pos_tune_Mode, PosTuneCommand, 
{ /* HDTUNEACC      */ NA, NA, RD_FCUST | WR_FCUST, SalReadPosTuneTrajAccDec, SalPosTuneTrajAccDecCommand, 
{ /* HDTUNEACTIVE   */ NA, NA, RD_FPTR0, PosTuneActiveCommand, NA, 
{ /* HDTUNEADVMODE  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_HdTune_Adv_Mode, SalHdTuneAdvMode, 
{ /* HDTUNEAVMODE   */ NA, NA, RD_DPTR | WR_FPTR0, &s16_HdTune_Av_Mode, SalHdTuneAvModeCommand, 
{ /* HDTUNEBAR      */ NA, NA, RD_FPTR0, HdTuneProgressBarCommand, NA, 
{ /* HDTUNECYCLE    */ NA, NA, RD_DPTR | WR_FCUST, &s16_Pos_Tune_Cycle, SalPosTuneCycleCommand, 
{ /* HDTUNEDEBUG    */ NA, NA, RD_DPTR | WR_DPTR, &s16_Hdtune_Debug, &s16_Hdtune_Debug, 
{ /* HDTUNEDEFAULTS */ NA, NA, RD_DPTR | WR_FPTR0, &u16_HdTune_Defaults, HdTuneDefaultsCommand, 
{ /* HDTUNEDIST     */ NA, NA, RD_FCUST | WR_FCUST, SalReadPosTuneTrajPos, SalPosTuneTrajPosCommand, 
{ /* HDTUNEDWELLTIME*/ NA, "ms", RD_DPTR | WR_FPTR0, &u16_HDTUNE_Dwell_Time_mS, HdTuneDwellTimeCommand, 
{ /* HDTUNEEFFORT   */ NA, "%", RD_DPTR | WR_FCUST, &s32_Pos_Tune_C_Effort, PosTuneEffortCommand, 
{ /* HDTUNEEFFORTMAX*/ NA, "%", RD_FPTR0, SalReadPosEffortMax, NA, 
{ /* HDTUNEENCSHR   */ NA, NA, RD_DPTR | WR_DPTR, &s16_Pos_Tune_Mencres_Shr_Mode, &s16_Pos_Tune_Mencres_Shr_Mode, 
{ /* HDTUNEGAIN     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_HdTune_Gain, HdTuneGainCommand, 
{ /* HDTUNEGUI      */ NA, NA, RD_FPTR1 | WR_FPTR1, HdTuneGuiCommand, HdTuneGuiCommand, 
{ /* HDTUNEIGRAV    */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Pos_Tune_Igrav, PosTuneIgravEnCommand, 
{ /* HDTUNELMJR     */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Pos_Tune_LMJR, PosTuneLMJREnCommand, 
{ /* HDTUNENLAFRC   */ NA, NA, RD_DPTR | WR_DPTR, &s16_Pos_Tune_KnlAfrc_Mode, &s16_Pos_Tune_KnlAfrc_Mode, 
{ /* HDTUNENLPEAFF  */ NA, NA, RD_DPTR | WR_DPTR, &s16_Pos_Tune_NlPeAff_Mode, &s16_Pos_Tune_NlPeAff_Mode, 
{ /* HDTUNEREFEN    */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Pos_Tune_Traj_Enable, PosTuneTrajEn, 
{ /* HDTUNEREFERENCE*/ NA, NA, RD_DPTR | WR_FPTR0, &s16_Pos_Tune_Traj_Mode_User, PosTuneTrajMode, 
{ /* HDTUNESATMODE  */ NA, NA, RD_DPTR | WR_DPTR, &u16_HDTUNE_Sat_Mode, &u16_HDTUNE_Sat_Mode, 
{ /* HDTUNESAVEMODE */ NA, NA, RD_DPTR | WR_DPTR, &u16_HDTUNE_Save_Mode, &u16_HDTUNE_Save_Mode, 
{ /* HDTUNEST       */ NA, NA, RD_FPTR1, PosTuneStCommand, NA, 
{ /* HDTUNESTIFF    */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Pos_Tune_Stiffness, PosTuneStiffnessCommand, 
{ /* HDTUNETABLE    */ NA, NA, RD_FPTR1, PosTuneTableCommand, NA, 
{ /* HDTUNETRAJINFO */ NA, NA, RD_FCUST, SalReadHDtuneIntTrajInfo, NA, 
{ /* HDTUNEVCRUISE  */ NA, NA, RD_FCUST | WR_FCUST, SalReadPosTuneTrajSpd, SalPosTuneTrajSpdCommand, 
{ /* HDTUNEWARNMODE */ NA, NA, RD_DPTR | WR_DPTR, &u16_HDTUNE_Warn_Mode, &u16_HDTUNE_Warn_Mode, 
{ /* HDTUNEWEIGHT   */ NA, "%", RD_DPTR | WR_DPTR, &s16_Pos_Tune_Weight_User, &s16_Pos_Tune_Weight_User, 
{ /* HIFACEREAD     */ NA, NA, RD_FCUST0 | WR_FCUST0, SalHifaceCmdGeneric, SalHifaceCmdGeneric, 
{ /* HIFACEWRITE    */ NA, NA, RD_FCUST0, SalHifaceWrite, NA, 
{ /* HOLD           */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Hold, SalHoldCommand, 
{ /* HOLDMODE       */ NA, NA, RD_DPTR | WR_DPTR, &u16_Hold_Mode, &u16_Hold_Mode, 
{ /* HOMEACC        */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_HomeAccRate, SalHomeAccCommand, 
{ /* HOMECMD        */ NA, NA, RD_FPTR1, HomeCommand, NA, 
{ /* HOMECMDST      */ NA, NA, RD_FPTR1, HomeCmdSt, NA, 
{ /* HOMEIHARDSTOP  */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &u32_Home_I_HardStop, SalHomeIHardStopCommand, 
{ /* HOMEOFFSET     */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &s64_Home_Offset, SalHomeOffCommand, 
{ /* HOMEOFSTMOVE   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Home_Ofst_Move, &u16_Home_Ofst_Move, 
{ /* HOMESPEED1     */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &u32_Home_Switch_Speed, SalHomeSpeed1Command, 
{ /* HOMESPEED2     */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &u32_Home_Zero_Speed, SalHomeSpeed2Command, 
{ /* HOMESTATE      */ NA, NA, RD_DPTR, &u8_Homing_State, NA, 
{ /* HOMETYPE       */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Home_Type_User, SalHomeTypeCommand, 
{ /* HSAVE          */ NA, NA, RD_FCUST, SalHSaveToFlash, NA, 
{ /* HWFEATURES     */ NA, NA, RD_FCUST, SalHwFeaturesCommand, NA, 
{ /* HWPEXT         */ NA, "counts", RD_DPTR | WR_FPTR0, &AX0_s16_Hwpext_Value, SalHWPextWriteCommand, 
{ /* HWPEXTCNTRLR   */ NA, "counts", RD_DPTR, &AX0_s32_Encoder_Follower2_Counter, NA, 
{ /* HWPEXTMACHN    */ NA, "counts", RD_DPTR, &AX0_s32_Encoder_Follower3_Counter, NA, 
{ /* HWPEXTMACHN2   */ NA, NA, RD_FPTR0, SalHWPEXTMACHN2Read, NA, 
{ /* HWPOS          */ NA, NA, RD_FPTR0, SalHwPosCommand, NA, 
{ /* I              */ s8_Units_Cur, NA, RD_DPTR, &u32_EqCrrnt, NA, 
{ /* ICMD           */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Icmd, NA, 
{ /* ICMD1          */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Icmd, NA, 
{ /* ICMDSLOPE      */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Icmd_Slp, SalSetTorqueSlopeCommand, 
{ /* ICMDSLOPEEN    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Icmd_Slope_Use, SalSetTorqueSlopeEnableCommand, 
{ /* ID             */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_D_Act_0, NA, 
{ /* IDENT          */ NA, NA, RD_FCUST0 | WR_FCUST, IdentReadCommand, IdentWriteCommand, 
{ /* IDENTOFF       */ NA, NA, RD_FCUST0, IdentOffCommand, NA, 
{ /* IDENTST        */ NA, NA, RD_FCUST0, IdentReadStatus, NA, 
{ /* IFFLPFHZ       */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Iff_Lpf_Hz, SalIffLpfHzCommand, 
{ /* IFOLD          */ s8_Units_Cur, NA, RD_DPTR, &s32_I_Fold, NA, 
{ /* IFOLDFTHRESH   */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &u32_I_Fold_Fault_Threshold, SalFoldFltThreshCommand, 
{ /* IFOLDWTHRESH   */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &u32_I_Fold_Warning_Threshold, SalFoldWrnThreshCommand, 
{ /* IFRIC          */ NA, "A", RD_DPTR | WR_FPTR0, &s16_Integral_Fric, SalIntegralFricCommand, 
{ /* IGNOREBATTFLT  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Ignore_Abs_Fdbk_Batt_Faults, SalIgnoreAbsFdbkBattFlt, 
{ /* IGNOREBRKFLT   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Ignore_Power_Brake_Fault, &u16_Ignore_Power_Brake_Fault, 
{ /* IGNOREINDEXLB  */ NA, NA, RD_DPTR | WR_DPTR, &s16_Ignore_Index_Line_Break_Fault, &s16_Ignore_Index_Line_Break_Fault, 
{ /* IGNOREPDLB     */ NA, NA, RD_DPTR | WR_DPTR, &s16_Ignore_Pulse_Line_Break_Fault, &s16_Ignore_Pulse_Line_Break_Fault, 
{ /* IGRAV          */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Igrav, SalIGravCommand, 
{ /* ILIM           */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Ilim_User, SalIlimCommand, 
{ /* ILIMACT        */ NA, "A", RD_DPTR, &s32_Ilim_Actual, NA, 
{ /* IMAX           */ NA, "A", RD_DPTR, &s32_Imax, NA, 
{ /* IN             */ NA, NA, RD_FCUST0, SalReadInCommand, NA, 
{ /* IN32OPMODES    */ NA, NA, RD_FCUST | WR_FPTR0, SalReadInxmode32OpmodesValue, SalWriteInxmode32OpmodesValue, 
{ /* IN32SWITCH     */ NA, NA, RD_DPTR | WR_DPTR, &u16_Opmode_Switch_InXMode32_Restore_Cmd, &u16_Opmode_Switch_InXMode32_Restore_Cmd, 
{ /* INDEXDURATE    */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_Index_Duration, SalIndexDurationTimeCommand, 
{ /* INDEXFIND      */ NA, NA, RD_FPTR1, SalIndexFindCommand, NA, 
{ /* INDEXFINDST    */ NA, NA, RD_FPTR0, SalReadIndexFindStCommand, NA, 
{ /* INDEXPFB       */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Index_Position_Fdbk_Lo, NA, 
{ /* INDEXST        */ NA, NA, RD_FPTR0, SalReadIndexStCommand, NA, 
{ /* INFO           */ NA, NA, RD_FPTR1, SalInfoCommand, NA, 
{ /* ININV          */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadInPolarCommand, SalInPolarCommand, 
{ /* INMODE         */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadInModeCommand, SalInModeCommand, 
{ /* INPOS          */ NA, NA, RD_DPTR, &AX0_u16_Inpos, NA, 
{ /* INPUTS         */ NA, NA, RD_FCUST0, SalReadInputsCommand, NA, 
{ /* IOEXPANDER     */ NA, NA, RD_FCUST | WR_FCUST, SalIOExpanderDeviceCom, SalIOExpanderDeviceCom, 
{ /* IQ             */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_Q_Act_0_User, NA, 
{ /* ISDRIVEREADY   */ NA, NA, RD_FPTR0, SalDriveReadyCmd, NA, 
{ /* ISTOP          */ NA, "A", RD_DPTR | WR_FPTR0, &u32_Stop_Current, SalIstopCommand, 
{ /* IU             */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_Srvo_Cmnd_U_Act_0, NA, 
{ /* IUNOISE        */ s8_Units_Cur, NA, RD_DPTR, &AX0_u16_Corr_Cal_U_Acc, NA, 
{ /* IUOFFSET       */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_U_Ofst, NA, 
{ /* IV             */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_Srvo_Cmnd_V_Act_0, NA, 
{ /* IVNOISE        */ s8_Units_Cur, NA, RD_DPTR, &AX0_u16_Corr_Cal_V_Acc, NA, 
{ /* IVOFFSET       */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_V_Ofst, NA, 
{ /* IW             */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_Srvo_Cmnd_W_Act_0, NA, 
{ /* IZERO          */ NA, "A", RD_DPTR | WR_FPTR0, &u32_Zero_Current, SalIzeroCommand, 
{ /* J              */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FCUST, &s32_Jog, SalJogCommand, 
{ /* JOGSPD1        */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FCUST, &s64_User_Jog_Vel, SalJogSpd1Command, 
{ /* JOGSPD2        */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FCUST, &s64_User_Jog_Vel2, SalJogSpd2Command, 
{ /* K              */ NA, NA, RD_FPTR1 | WR_FPTR0, SalDisableCommandUser, SalDisableCommand, 
{ /* KCBEMF         */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_Bemf_Gain, SalClBemfCommand, 
{ /* KCD            */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Kcd_Gain, SalKCDCommand, 
{ /* KCDQCOMP       */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_DQ_Axis_Comp_Gain, SalClDAxisCompCommand, 
{ /* KCFF           */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_Kff_User, SalClKffCommand, 
{ /* KCFWEAKGAIN    */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_FWeak_Gain_Fix, &AX0_s16_FWeak_Gain_Fix, 
{ /* KCI            */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_Ki_User, SalClKiCommand, 
{ /* KCIMEMD        */ NA, NA, RD_DPTR, &AX0_s32_Crrnt_D_Mem, NA, 
{ /* KCIMEMQ        */ NA, NA, RD_DPTR, &AX0_s32_Crrnt_Q_Mem, NA, 
{ /* KCIV           */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_Kiv_User, SalClKivCommand, 
{ /* KCMODE         */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_S16_Kc_Mode, SalKCMODECommand, 
{ /* KCP            */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_Kp_User, SalClKpCommand, 
{ /* KCSATFACTOR    */ NA, NA, RD_DPTR | WR_FPTR0, &s32_PWM_Sat_Factor, SalClSatFactorCommand, 
{ /* KCUSERGAIN     */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_User_Gain, SalClUserGainCommand, 
{ /* KCVG           */ NA, NA, RD_DPTR | WR_FPTR0, &s32_CL_Kvg_User, SalClVgCommand, 
{ /* KNLAFRC        */ NA, "% Nom", RD_DPTR | WR_FPTR0, &u16_KNLAFF, SalKnlafrcCommand, 
{ /* KNLANTIVIB3    */ NA, NA, RD_DPTR, &AX0_s32_Anti_Resonant_Filter_Output, NA, 
{ /* KNLANTIVIBOUT  */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Anti_Vib_Addition_Lo, NA, 
{ /* KNLD           */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Nl_Kpd, SalNlKpdCommand, 
{ /* KNLDSOURCEMODE */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Knld_Source_Mode, &AX0_s16_Knld_Source_Mode, 
{ /* KNLDUALLOOPAFF */ NA, "% Nom", RD_DPTR | WR_FPTR0, &u16_Dual_Loop_AFF, SalKnlDualLoopAffCommand, 
{ /* KNLDUALLOOPKP  */ NA, "Hz", RD_DPTR | WR_FPTR0, &s32_Dual_Loop_Kp, SalKnlDualLoopKpCommand, 
{ /* KNLDUALLOOPVFF */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Dual_Loop_Vff, SalKnlDualLoopVffCommand, 
{ /* KNLI           */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Nl_Kpi, SalNlKpiCommand, 
{ /* KNLIV          */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Nl_Kpiv, SalNlKpivCommand, 
{ /* KNLP           */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Nl_Kpp, SalNlKppCommand, 
{ /* KNLUSERGAIN    */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Nl_Kpgf, SalNlKpgfCommand, 
{ /* KNLUSERVCMDGAIN*/ NA, NA, RD_DPTR | WR_FPTR0, &u32_Nl_Speed_Gain_User, SalNAdaptiveVcmdGainfCommand, 
{ /* KNLVFF         */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Nl_Vff, SalNlVffCommand, 
{ /* KNLVG          */ NA, NA, RD_DPTR, &AX0_s16_Global_Gain_nlp, NA, 
{ /* KPAFRC         */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Kpafrcurrent, SalKpafrToCurrentCommand, 
{ /* KPAFRV         */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Kpafr, SalKpafrCommand, 
{ /* KPAFRV2        */ NA, "mSec", RD_DPTR | WR_FPTR0, &s32_Kpafr2, SalKpafr2Command, 
{ /* KPD            */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Kpd, SalKpdCommand, 
{ /* KPE            */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Kpe, SalKpeCommand, 
{ /* KPI            */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Kpi, SalKpiCommand, 
{ /* KPISATIN       */ s8_Units_Pos_Rot_Lin, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Sat_In_Lo_Design, SalKpiSatInCommand, 
{ /* KPISATOUT      */ s8_Units_Vel_Out_Loop_Rot_Lin_RPS, NA, RD_DPTR | WR_FPTR0, &u64_KpiSatOut, SalKpiSatOutCommand, 
{ /* KPJFR          */ NA, "Sec^2", RD_DPTR | WR_FPTR0, &s32_Kpjfr, SalKpjfrCommand, 
{ /* KPJFRSAT       */ NA, "RPM/Sec^2", RD_DPTR | WR_FPTR0, &s32_Kpjfr_Sat, SalKpjfrSatCommand, 
{ /* KPP            */ s8_Units_Rot_Lin_KPP, NA, RD_DPTR | WR_FPTR0, &u32_Kpp, SalKppCommand, 
{ /* KPPVG          */ NA, NA, RD_DPTR | WR_FPTR0, &u32_KppVg, SalKppVgCommand, 
{ /* KPPVGBREAK     */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &AX0_u32_FricKpp_Breakaway_Lo, SalKppVgBreakAwayCommand, 
{ /* KPPVGHOLDOFF   */ NA, "mSec", RD_DPTR | WR_FPTR0, &u16_KppVgHoldoff, SalKppVgHoldOffCommand, 
{ /* KPPVGSPEED     */ NA, "RPM", RD_DPTR | WR_FPTR0, &u32_KppVgSpeed, SalKppVgSpeedCommand, 
{ /* KPPVGTIME      */ NA, "mSec", RD_DPTR | WR_FPTR0, &u16_KppVgTime, SalKppVgTimeCommand, 
{ /* KPVFR          */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Kpvfr, SalKpvfrCommand, 
{ /* KPVFR2         */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Kpvfr2, SalKpvfr2Command, 
{ /* KVFR           */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Kvfr, SalKvfrCommand, 
{ /* KVI            */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Kvi, SalKviCommand, 
{ /* KVITERM        */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Vel_Integrator_Memory_Override_Value, SalKviTermWriteCommand, 
{ /* KVP            */ s8_Units_Rot_Lin_AMP_VEL, NA, RD_DPTR | WR_FPTR0, &u32_Kv, SalKvCommand, 
{ /* L              */ NA, NA, RD_FPTR1, LCommand, NA, 
{ /* LATCHRECPARAM  */ NA, NA, RD_FCUST, LatchRecParamCommand, NA, 
{ /* LIMSWITCHNEG   */ NA, NA, RD_DPTR, &AX0_u16_CCW_LS, NA, 
{ /* LIMSWITCHPOS   */ NA, NA, RD_DPTR, &AX0_u16_CW_LS, NA, 
{ /* LINELOSSMODE   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Line_Loss_Mode, &u16_Line_Loss_Mode, 
{ /* LINELOSSRECOVER*/ NA, NA, RD_DPTR | WR_DPTR, &u16_Line_Loss_Recover, &u16_Line_Loss_Recover, 
{ /* LINELOSSTYPE   */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Line_Loss_Type, SalLineLossTypeCommand, 
{ /* LIST           */ NA, NA, RD_FCUST0, ListCommand, NA, 
{ /* LMJR           */ NA, NA, RD_DPTR | WR_FPTR0, &u32_LMJR, SalLmjrCommand, 
{ /* LMJREST        */ NA, NA, RD_FCUST | WR_FCUST, SalLmjrEstCommand, SalLmjrEstCommand, 
{ /* LMJRESTST      */ NA, NA, RD_FPTR1, SalLmjrEstStCommand, NA, 
{ /* LMUNITSDEN     */ NA, NA, RD_DPTR | WR_FPTR0, &s32_SFBUnitsDen, SalSFBUnitsDenominator, 
{ /* LMUNITSNUM     */ NA, NA, RD_DPTR | WR_FPTR0, &s32_SFBUnitsNum, SalSFBUnitsNumerator, 
{ /* LOAD           */ NA, NA, RD_FPTR1, SalLoadFromFlashCommand, NA, 
{ /* LOCKEDROTOR    */ NA, NA, RD_FPTR0 | WR_FPTR0, SalReadLockedRotor, SalLockedRotor, 
{ /* MACC           */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_Mfb_AccRate, SalMotorAccCommand, 
{ /* MB             */ NA, NA, RD_FPTR1, MotionBufferCommand, NA, 
{ /* MBMEMB         */ NA, NA, RD_FCUST0 | WR_FPTR2, MicroBlazeReadMemoryByte, MicroBlazeWriteMemoryByte, 
{ /* MBMEML         */ NA, NA, RD_FCUST0 | WR_FPTR2, MicroBlazeReadMemoryLong, MicroBlazeWriteMemoryLong, 
{ /* MBMEMW         */ NA, NA, RD_FCUST0 | WR_FPTR2, MicroBlazeReadMemoryWord, MicroBlazeWriteMemoryWord, 
{ /* MBST           */ NA, NA, RD_FPTR1, SalMotionBufferStatusCommand, NA, 
{ /* MCHOMEST       */ NA, NA, RD_FPTR0, SalMcHomeStatusRead, NA, 
{ /* MDEC           */ s8_Units_Acc_Dec_For_Pos, NA, RD_DPTR | WR_FPTR0, &u64_Mfb_DecRate, SalMotorDecCommand, 
{ /* MECHANGLE      */ s8_Units_Rot_Lin_MECHANGLE, NA, RD_DPTR, &AX0_s16_Feedback_Comm_Pos, NA, 
{ /* MEMBIT         */ NA, NA, RD_FCUST0 | WR_FCUST0, ReadMemoryBit, SalWriteMemoryBit, 
{ /* MEMF           */ NA, NA, RD_FCUST0 | WR_FCUST0, ReadMemoryFloat, SalWriteMemoryFloat, 
{ /* MEML           */ NA, NA, RD_FCUST0 | WR_FPTR2, ReadMemoryLong, SalWriteMemoryLong, 
{ /* MEMQ           */ NA, NA, RD_FCUST0 | WR_FCUST0, ReadMemoryLongLong, SalWriteMemoryLongLong, 
{ /* MEMW           */ NA, NA, RD_FCUST0 | WR_FPTR2, ReadMemoryWord, SalWriteMemoryWord, 
{ /* MENCAQBFILT    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_AqB_Filter, SalAqBFilterCommand, 
{ /* MENCRES        */ s8_Units_Rot_Lin_ENCRES, NA, RD_DPTR | WR_FPTR0, &u32_User_Motor_Enc_Res, SalMotorEncResCommand, 
{ /* MENCRESSHROVR  */ NA, NA, RD_DPTR | WR_FPTR0, &s16_User_Motor_Enc_Res_Shr, SalMotorEncResShrCommand, 
{ /* MENCTYPE       */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Motor_Enc_Type, SalMotorEncTypeCommand, 
{ /* MENCZPOS       */ NA, "electrical degree", RD_DPTR | WR_FPTR0, &s16_User_Index_Elect_Pos, SalWriteMencoff, 
{ /* MFB            */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pfb_Internal_After_Mod_Lo, NA, 
{ /* MFBDIR         */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Motor_Feedback_Direction, SalMotorFeedbackDirectionCommand, 
{ /* MFBINT         */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Motor_Enc_Interpolation, SalMotorEncInterpolationCommand, 
{ /* MFBMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Motor_Enc_Interpolation_Mode, SalMotorEncInterpolationModeCommand, 
{ /* MFOLD          */ NA, NA, RD_DPTR, &u16_Motor_Fold, NA, 
{ /* MFOLDD         */ NA, "s", RD_DPTR | WR_FPTR0, &u32_Motor_FoldD_Time, SalMotorFoldDCommand, 
{ /* MFOLDDIS       */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Motor_Foldback_Disable, SalMotorFoldDisableCommand, 
{ /* MFOLDF         */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Motor_Fold_Rms_Factor, SalMotorFoldRmsFactorCommand, 
{ /* MFOLDR         */ NA, "s", RD_DPTR, &u32_Motor_FoldR_Time, NA, 
{ /* MFOLDT         */ NA, "s", RD_DPTR | WR_FPTR0, &u32_Motor_FoldT_Time, SalMotorFoldTCommand, 
{ /* MICONT         */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Motor_I_Cont, SalMotorIContCommand, 
{ /* MIFOLD         */ s8_Units_Cur, NA, RD_DPTR, &s32_Motor_I_Fold, NA, 
{ /* MIFOLDFTHRESH  */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &u32_Motor_I_Fold_Fault_Threshold, SalMotorFoldFltThreshCommand, 
{ /* MIFOLDWTHRESH  */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &u32_Motor_I_Fold_Warning_Threshold, SalMotorFoldWrnThreshCommand, 
{ /* MIPEAK         */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Motor_I_Peak, SalMotorIPeakCommand, 
{ /* MJ             */ NA, "Kg*m^2*10^-3", RD_DPTR | WR_FPTR0, &s32_Motor_J, SalMJCommand, 
{ /* MKF            */ NA, "N/A", RD_DPTR | WR_FPTR0, &u32_Motor_Kf, SalMotorKfCommand, 
{ /* MKT            */ NA, "Nm/A", RD_DPTR | WR_FPTR0, &u32_Motor_Kt, SalMotorKtCommand, 
{ /* ML             */ NA, "mH", RD_DPTR | WR_FPTR0, &u32_Mlmin, SalMlminCommand, 
{ /* MLGAINC        */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Mcont_Current_Gain, SalMcontCurrentGainCommand, 
{ /* MLGAINP        */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Mpeak_Current_Gain, SalMpeakCurrentGainCommand, 
{ /* MMASS          */ NA, "Kg", RD_DPTR | WR_FPTR0, &s32_Motor_Mass, SalMMASSCommand, 
{ /* MODBUS         */ NA, NA, RD_DPTR | WR_DPTR, &s16_Serial_Type, &s16_Serial_Type, 
{ /* MODMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Modulo_Mode, SalModuloModeCommand, 
{ /* MOTORCOMMTYPE  */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Motor_Comm_Type, SalMotorCommTypeCommand, 
{ /* MOTORNAME      */ NA, NA, RD_FCUST | WR_FCUST, SalReadMotorName, SalSetMotorName, 
{ /* MOTORPHASESCAN */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Phase_Disconnect_Scan, SalPhaseDisconnectScanCommand, 
{ /* MOTORSETUP     */ NA, NA, RD_FCUST, MotorSetupCommand, NA, 
{ /* MOTORSETUPST   */ NA, NA, RD_FPTR1, MotorSetupStatusCommand, NA, 
{ /* MOTORTYPE      */ NA, NA, RD_DPTR | WR_FPTR0, &u16_MotorType, SalMotorTypeCommand, 
{ /* MOVEABS        */ NA, NA, RD_FCUST | WR_FCUST, MoveAbsCommand, SalMoveAbsCommand, 
{ /* MOVEINC        */ NA, NA, RD_FCUST | WR_FCUST, MoveIncCommand, SalMoveIncCommand, 
{ /* MOVEINCCOUNTER */ NA, NA, RD_DPTR | WR_DPTR, &u32_Moveinc_Counter, &u32_Moveinc_Counter, 
{ /* MOVEINCDELAY   */ NA, "ms", RD_DPTR | WR_DPTR, &s32_Moveinc_Delay, &s32_Moveinc_Delay, 
{ /* MOVEINCDIST1   */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Moveinc_Dist1, &s64_Moveinc_Dist1, 
{ /* MOVEINCDIST2   */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Moveinc_Dist2, &s64_Moveinc_Dist2, 
{ /* MOVEINCSPEED1  */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_DPTR, &s32_Moveinc_Speed1, &s32_Moveinc_Speed1, 
{ /* MOVEINCSPEED2  */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_DPTR, &s32_Moveinc_Speed2, &s32_Moveinc_Speed2, 
{ /* MOVESINE       */ NA, NA, RD_FCUST | WR_FCUST, MoveSineCommand, SalMoveSineCommand, 
{ /* MOVESMOOTHAVG  */ NA, "ms", RD_DPTR | WR_FPTR0, &u32_Move_Smooth_Avg, SalMoveSmoothAvgNumCommand, 
{ /* MOVESMOOTHLPFHZ*/ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Move_Smooth_Lpf_Hz_User, SalMoveSmoothLpfCommand, 
{ /* MOVESMOOTHMODE */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Move_Smooth_Mode, MoveSmoothModeCommand, 
{ /* MOVESMOOTHSRC  */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Move_Smooth_Source, MoveSmoothSourceCommand, 
{ /* MPHASE         */ NA, "electrical degree", RD_FPTR0 | WR_FPTR0, SalReadMphaseCommand, SalMphaseCommand, 
{ /* MPITCH         */ NA, "mm", RD_DPTR | WR_FPTR0, &u32_Mpitch, SalMpitchCommand, 
{ /* MPOLES         */ NA, "poles", RD_DPTR | WR_FPTR0, &u16_Mpoles, SalMpolesCommand, 
{ /* MR             */ NA, "Ohm", RD_DPTR | WR_FPTR0, &u32_Motor_Res, SalMresCommand, 
{ /* MRESPOLES      */ NA, "poles", RD_DPTR | WR_FPTR0, &u16_Resolver_Poles, SalMotorResPolesCommand, 
{ /* MSGPROMPT      */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Message, SalMessageCommand, 
{ /* MSININT        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Sine_Interpolation, SalMsinintCommand, 
{ /* MSPEED         */ s8_Units_Vel_Out_Loop_Rot_Lin_RPM, NA, RD_DPTR | WR_FPTR0, &u32_Mspeed, SalMspeedCommand, 
{ /* MTANGLC        */ NA, "electrical degree", RD_DPTR | WR_FPTR0, &s16_Mcont_T_Adv, SalMContTAdvCommand, 
{ /* MTANGLP        */ NA, "electrical degree", RD_DPTR | WR_FPTR0, &s16_Mpeak_T_Adv, SalMPeakTAdvCommand, 
{ /* MTPINFO        */ NA, NA, RD_FPTR1, MtpInfoCommand, NA, 
{ /* MTPMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_MTP_Mode_User, SalSetMtpMode, 
{ /* MTPST          */ NA, NA, RD_FPTR0, MtpStatusCommand, NA, 
{ /* MTTURNRESET    */ NA, NA, RD_FPTR1, SalMtTurnResetCommand, NA, 
{ /* MVANGLF        */ NA, "electrical degree", RD_DPTR | WR_FPTR0, &s16_Mspeed_Speed_Advance, SalMspeedSpeedAdvCommand, 
{ /* MVANGLH        */ NA, "electrical degree", RD_DPTR | WR_FPTR0, &s16_Half_Mspeed_Speed_Advance, SalHalfMspeedSpeedAdvCommand, 
{ /* MVEL           */ s8_Units_Vel_Out_Loop, NA, RD_DPTR, &AX0_s32_Vel_Var_Fb_0, NA, 
{ /* NLAFFLPFHZ     */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Kbff_Spring_LPF, SalKbffLpfCommand, 
{ /* NLANTIVIBGAIN  */ NA, "Rad*10-3/Nm", RD_DPTR | WR_FPTR0, &u32_Nl_K_Anti_Vibration, SalNlKAntiVibrationCommand, 
{ /* NLANTIVIBGAIN2 */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Pe_Filt_Gain, SalNlPeGainCommand, 
{ /* NLANTIVIBGAIN3 */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Antivib3_Gain, SalNlPe3GainCommand, 
{ /* NLANTIVIBHZ    */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Nl_K_Anti_Resonance_Fcenter, SalNlKAntiResonanceFcenterCommand, 
{ /* NLANTIVIBHZ2   */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Pe_Filt_Fcenter, SalNlPeFcenterCommand, 
{ /* NLANTIVIBHZ3   */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Antivib3_Fcenter, SalNlPe3FcenterCommand, 
{ /* NLANTIVIBLMJR  */ NA, NA, RD_DPTR | WR_FPTR0, &u32_LMJR_Resonance, SalLmjrResCommand, 
{ /* NLANTIVIBN     */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Anti_Res_Hz_Div, SalNlKAntiResonanceFcenterDivCommand, 
{ /* NLANTIVIBQ3    */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Antivib3_Q_Gain_User, SalNlPe3QGainCommand, 
{ /* NLANTIVIBSHARP */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Nl_K_Anti_Resonance_Sharpness, SalNlKAntiResonanceSharpnessCommand, 
{ /* NLANTIVIBSHARP2*/ NA, NA, RD_DPTR | WR_FPTR0, &u16_Pe_Filt_Sharpness, SalNlPeSharpnessCommand, 
{ /* NLANTIVIBSHARP3*/ NA, NA, RD_DPTR | WR_FPTR0, &u16_Antivib3_Sharpness, SalNlPe3SharpnessCommand, 
{ /* NLFILTDAMPING  */ NA, "%", RD_DPTR | WR_FPTR0, &s16_Nl_Out_Filter_2, SalNlOutFilter2Command, 
{ /* NLFILTMODE     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Nl_Filter_Mode, SalNlFilterMode, 
{ /* NLFILTMODE2    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Nl_Filter_Mode2, SalNlFilterMode2, 
{ /* NLFILTT1       */ NA, "ms", RD_DPTR | WR_FPTR0, &s16_Nl_Out_Filter_1, SalNlOutFilter1Command, 
{ /* NLMAXGAIN      */ NA, NA, RD_DPTR | WR_FCUST, &u32_Nl_Kpgmax, SalNlKpgmaxCommand, 
{ /* NLNOTCH2BW     */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Nl_Notch2_BW, SalNlNotch2BWCommand, 
{ /* NLNOTCH2CENTER */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Nl_Notch2_Center, SalNlNotch2CenterCommand, 
{ /* NLNOTCHBW      */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Nl_Notch_BW, SalNlNotchBWCommand, 
{ /* NLNOTCHCENTER  */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Nl_Notch_Center, SalNlNotchCenterCommand, 
{ /* NLPEAFF        */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_Nl_KffSpring, SalNlKffSpringCommand, 
{ /* NLPEAFFACT     */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Aff_Lo, NA, 
{ /* NLPEAFFFILT    */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Nl_KffSpring_LPF, SalNlKffSpringFilterCommand, 
{ /* NLPEDFFRATIO   */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Nl_Dff_Ratio, SalNlKffSpringDecRatioCommand, 
{ /* NLSETTLEMODE   */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Nl_Settle_Mode, &AX0_s16_Nl_Settle_Mode, 
{ /* NLTFBW         */ NA, "Hz", RD_DPTR | WR_FPTR0, &s16_Nl_Tf_Bw, SalNlTfBwCommand, 
{ /* NLTFDESIGNMODE */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Nl_Tf_Design_Mode, SalNlTfDesignModeommand, 
{ /* NLTUNE         */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_NL_Tune_Status, SalNLTuneCommand, 
{ /* NLTUNEPARAM    */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &AX0_u32_NL_Tune_Pe_Lo, &AX0_u32_NL_Tune_Pe_Lo, 
{ /* NLTUNEPARAM2   */ NA, NA, RD_DPTR | WR_DPTR, &AX0_u16_TQF_Weight_Shl, &AX0_u16_TQF_Weight_Shl, 
{ /* NLTUNEPARAM3   */ NA, NA, RD_DPTR | WR_DPTR, &AX0_u16_NL_StandStill_Disable, &AX0_u16_NL_StandStill_Disable, 
{ /* NLTUNEST       */ NA, NA, RD_FCUST, SalNLTuneStatusCommand, NA, 
{ /* NLTUNETIME     */ NA, "ms", RD_DPTR | WR_DPTR, &u32_NlTune_Timeout, &u32_NlTune_Timeout, 
{ /* NLVELLIM       */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Nl_Vel_Lim, SalNlVelLimCommand, 
{ /* NOTCHFIND      */ NA, NA, RD_FCUST | WR_FCUST, SalReadNotchFindCommand, SalWriteNotchFindCommand, 
{ /* NOTCHFINDST    */ NA, NA, RD_FCUST, SalReadNotchFindStCommand, NA, 
{ /* OPMODE         */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Opmode_Request, SalOpmodeCommand, 
{ /* OPMODEDIRECTSE */ NA, NA, RD_DPTR | WR_DPTR, &u16_Enable_OpmodeSE_Skip_PowerCycle, &u16_Enable_OpmodeSE_Skip_PowerCycle, 
{ /* OPMODESWITCH   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Opmode_Change_Mode, &u16_Opmode_Change_Mode, 
{ /* OUT            */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadOutCommand, SalOutCommand, 
{ /* OUTBRAKE       */ NA, NA, RD_FPTR0 | WR_FPTR0, SalOutBrakeReadCommand, SalOutBrakeWriteCommand, 
{ /* OUTBRAKEINV    */ NA, NA, RD_DPTR | WR_DPTR, &AX0_u16_Manual_Out_Brake_Inv, &AX0_u16_Manual_Out_Brake_Inv, 
{ /* OUTBRAKEMODE   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Out_Brake_Mode, &u16_Out_Brake_Mode, 
{ /* OUTFLTLVL      */ NA, NA, RD_DPTR | WR_DPTR, &u32_Digital_Outputs_After_Fault, &u32_Digital_Outputs_After_Fault, 
{ /* OUTFREQLIMIT   */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Output_freq_limit, SalWriteOutputFrequencyLimit, 
{ /* OUTILVL1       */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &s32_Out_I_Level_1, SalOutILevel1Command, 
{ /* OUTILVL2       */ s8_Units_Cur, NA, RD_DPTR | WR_FPTR0, &s32_Out_I_Level_2, SalOutILevel2Command, 
{ /* OUTINV         */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadOutPolarCommand, SalOutPolarCommand, 
{ /* OUTMODE        */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadOutModeCommand, SalOutModeCommand, 
{ /* OUTPLVL1       */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Out_P_Level_1, &s64_Out_P_Level_1, 
{ /* OUTPLVL2       */ s8_Units_Pos, NA, RD_DPTR | WR_DPTR, &s64_Out_P_Level_2, &s64_Out_P_Level_2, 
{ /* OUTPUTS        */ NA, NA, RD_FCUST0, SalReadOutputsCommand, NA, 
{ /* OUTPUTST       */ NA, NA, RD_FCUST | WR_FCUST, SalChangeOutputState, SalChangeOutputState, 
{ /* OUTVLVL1       */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_Out_V_Level_1, SalOutVLevel1Command, 
{ /* OUTVLVL2       */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_Out_V_Level_2, SalOutVLevel2Command, 
{ /* OVDELAY        */ NA, NA, RD_DPTR | WR_DPTR, &u16_Ov_Delay, &u16_Ov_Delay, 
{ /* OVTHRESH       */ NA, "V", RD_FPTR2 | WR_FPTR0, SalReadOVThreshold, SalOVThresholdCommand, 
{ /* PASSWORD       */ NA, NA, RD_FCUST0 | WR_FCUST0, SalPasswordCommand, SalPasswordCommand, 
{ /* PATHACC        */ s8_Units_Acc_Dec_For_Pos, NA, RD_FPTR0 | WR_FCUST1, SalReadPathAccelerationCommand, SalPathAccelerationCommand, 
{ /* PATHCTRL       */ NA, NA, RD_FPTR0 | WR_FCUST, SalReadPathControlCommand, SalPathControlCommand, 
{ /* PATHDEC        */ s8_Units_Acc_Dec_For_Pos, NA, RD_FPTR0 | WR_FCUST1, SalReadPathDecelerationCommand, SalPathDecelerationCommand, 
{ /* PATHDELAY      */ NA, "ms", RD_FPTR0 | WR_FCUST, SalReadPathDelayCommand, SalPathDelayCommand, 
{ /* PATHPOS        */ s8_Units_Pos, NA, RD_FPTR0 | WR_FCUST1, SalReadPathPositionCommand, SalPathPositionCommand, 
{ /* PATHSPEED      */ s8_Units_Vel_Out_Loop, NA, RD_FPTR0 | WR_FCUST1, SalReadPathSpeedCommand, SalPathSpeedCommand, 
{ /* PCMD           */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pcmd_Internal_After_Mod_Lo, NA, 
{ /* PCMDFBRAW      */ NA, NA, RD_DPTR, &manu_spec_u16_Debug_Position_Command, NA, 
{ /* PCMDRAW        */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pcmd_Raw_Lo, NA, 
{ /* PCOMCNTRL1     */ NA, NA, RD_FCUST | WR_FPTR0, SalReadPcomCntrl1Command, SalWritePcomCntrl1Command, 
{ /* PCOMCNTRL2     */ NA, NA, RD_FCUST | WR_FPTR0, SalReadPcomCntrl2Command, SalWritePcomCntrl2Command, 
{ /* PCOMDIR1       */ NA, NA, RD_DPTR | WR_FPTR0, &u16_PCom_Dir1, SalWritePcomDirCommand1, 
{ /* PCOMDIR2       */ NA, NA, RD_DPTR | WR_FPTR0, &u16_PCom_Dir2, SalWritePcomDirCommand2, 
{ /* PCOMEND1       */ NA, NA, RD_FPTR0 | WR_FPTR0, SalPcomEndReadCommand1, SalPcomEndWriteCommand1, 
{ /* PCOMEND2       */ NA, NA, RD_FPTR0 | WR_FPTR0, SalPcomEndReadCommand2, SalPcomEndWriteCommand2, 
{ /* PCOMN1         */ NA, NA, RD_FPTR0 | WR_FPTR0, SalPcomGapReadCommand1, SalPcomGapWriteCommand1, 
{ /* PCOMN2         */ NA, NA, RD_FPTR0 | WR_FPTR0, SalPcomGapReadCommand2, SalPcomGapWriteCommand2, 
{ /* PCOMSOURCE     */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Pcom_Source1, SalWritePcomSourceCommand1, 
{ /* PCOMSTART1     */ NA, NA, RD_FPTR0 | WR_FPTR0, SalPcomStartReadCommand1, SalPcomStartCommandWrite1, 
{ /* PCOMSTART2     */ NA, NA, RD_FPTR0 | WR_FPTR0, SalPcomStartReadCommand2, SalPcomStartCommandWrite2, 
{ /* PCOMSTATUS1    */ NA, NA, RD_FCUST0, SalReadPcomStatus1Command, NA, 
{ /* PCOMSTATUS2    */ NA, NA, RD_FCUST0, SalReadPcomStatus2Command, NA, 
{ /* PCOMTABLE1     */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadPcomTable1Command, SalWritePcomTable1Command, 
{ /* PCOMTABLE2     */ NA, NA, RD_FCUST0 | WR_FCUST0, SalReadPcomTable2Command, SalWritePcomTable2Command, 
{ /* PCOMTABLELEN1  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Pcom_Table_Len1, SalWritePcomTableLenCommand1, 
{ /* PCOMTABLELEN2  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Pcom_Table_Len2, SalWritePcomTableLenCommand2, 
{ /* PCOMWIDTH1     */ NA, "0.1 us", RD_DPTR | WR_FPTR0, &u32_Pcom_Pulse_Width1, SalWritePcomWidthCommand1, 
{ /* PCOMWIDTH2     */ NA, "0.1 us", RD_DPTR | WR_FPTR0, &u32_Pcom_Pulse_Width2, SalWritePcomWidthCommand2, 
{ /* PDEN           */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Scaling_Pdenominator, SalScalingPdenominator, 
{ /* PE             */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pos_Err_Lo, NA, 
{ /* PEDELAYED      */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Delayed_Pos_Err_Lo, NA, 
{ /* PEDELAYTIME    */ NA, "ms", RD_DPTR | WR_DPTR, &AX0_s16_Delayed_Pos_Err_Delay_Time_ms, &AX0_s16_Delayed_Pos_Err_Delay_Time_ms, 
{ /* PEINPOS        */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Inpos_Threshold_Lo, SalPeInposCommand, 
{ /* PEINPOSTIME    */ NA, "ms", RD_DPTR | WR_DPTR, &AX0_u16_Inpos_Time, &AX0_u16_Inpos_Time, 
{ /* PELOOP         */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pos_Err_PELOOP_Lo, NA, 
{ /* PEMAX          */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &u64_Pe_Max, SalWritePositionErrorMax, 
{ /* PFB            */ s8_Units_Pos, NA, RD_DPTR, &AX0_s16_Pfb_User_Ptr, NA, 
{ /* PFB1           */ s8_Units_Pos, NA, RD_DPTR, &AX0_s16_Pos_Loop_Pfb_Ptr, NA, 
{ /* PFBBACKUP      */ s8_Units_Pos, NA, RD_DPTR, &s64_Pfb_Backup, NA, 
{ /* PFBBACKUPMODE  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Pfb_Backup_Mode, SalPfbBackupModeCommand, 
{ /* PFBOFFSET      */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Pos_Fdbk_Offset_Lo, SalPfbOffCommand, 
{ /* PFBRAW         */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pos_Fdbk_Before_Err_Cor_Lo, NA, 
{ /* PFBRAWMOD      */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Pos_Fdbk_Before_Err_Cor_After_Mod_Lo, NA, 
{ /* PHASEADVCAL    */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Phase_Adv_Calibrate, SalPhaseAdvCalibrateCommand, 
{ /* PHASEFIND      */ NA, NA, RD_FPTR1, PhaseFindCommand, NA, 
{ /* PHASEFINDANGLE */ NA, "65536/(elect cycle)", RD_DPTR | WR_DPTR, &u16_PhaseFindEPos, &u16_PhaseFindEPos, 
{ /* PHASEFINDDELTA */ NA, "electrical degree", RD_DPTR | WR_FPTR0, &u16_PhaseFind_Delta, PhaseFindDeltaCommand, 
{ /* PHASEFINDGAIN  */ NA, NA, RD_DPTR | WR_DPTR, &s16_PhaseFind_Gain, &s16_PhaseFind_Gain, 
{ /* PHASEFINDI     */ NA, "A", RD_DPTR | WR_FPTR0, &s32_PhaseFind_Current, PhaseFindCurrentCommand, 
{ /* PHASEFINDMODE  */ NA, NA, RD_DPTR | WR_FPTR0, &u16_PhaseFind_Mode, PhaseFindModeCommand, 
{ /* PHASEFINDST    */ NA, NA, RD_FPTR0, PhaseFindStatusCommand, NA, 
{ /* PHASEFINDTIME  */ NA, "ms", RD_DPTR | WR_FPTR0, &u16_PhaseFind_Time, PhaseFindTimeCommand, 
{ /* PNUM           */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Scaling_Pnumerator, SalScalingPnumerator, 
{ /* POSCONTROLMODE */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_Pos_Control_Mode, SalPoscontrolModeCommand, 
{ /* POSLIMHYST     */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &s64_Pos_Lim_Hyst, SalPosLimHystCommand, 
{ /* POSLIMMODE     */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_u16_SW_Pos_lim, SalPosLimModeCommand, 
{ /* POSLIMNEG      */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Pos_Min_Lim_Lo, SalNegLimCommand, 
{ /* POSLIMPOS      */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Pos_Max_Lim_Lo, SalPosLimCommand, 
{ /* PPGAIN         */ NA, NA, RD_DPTR | WR_FPTR0, &u32_PP_Gain, SalPPGainCommand, 
{ /* PRBFRQ         */ NA, "Hz", RD_DPTR | WR_FPTR0, &u32_PRB_Freq, SalPRBFreqCommand, 
{ /* PRBHOLD        */ NA, NA, RD_DPTR | WR_DPTR, &AX0_u16_Prb_Hold_Mode, &AX0_u16_Prb_Hold_Mode, 
{ /* PRBICMD        */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_PRB_I, NA, 
{ /* PRBMODE        */ NA, NA, RD_DPTR | WR_DPTR, &AX0_u16_PRB_Mode, &AX0_u16_PRB_Mode, 
{ /* PRBPARAM       */ NA, NA, RD_FCUST | WR_FCUST, SalPrbParamReadCommand, SalPrbParamWriteCommand, 
{ /* PROBECONFIG    */ NA, NA, RD_FCUST | WR_FCUST, SalProbeConfigReadCommand, SalProbeConfigWriteCommand, 
{ /* PROBECOUNTER   */ NA, NA, RD_FCUST, SalProbeCounterReadCommand, NA, 
{ /* PROBEDATAFALL  */ NA, NA, RD_FCUST, SalProbeDataFallCommand, NA, 
{ /* PROBEDATARISE  */ NA, NA, RD_FCUST, SalProbeDataRiseCommand, NA, 
{ /* PROBELEVELFLT  */ NA, "31.25 us", RD_FCUST | WR_FCUST, SalProbeLevelFltReadCommand, SalProbeLevelFltWriteCommand, 
{ /* PROBELEVELPRD  */ NA, "31.25 us", RD_DPTR | WR_FPTR0, &u16_Probe_Lvl_Prd[0], SalProbeLevelPeriod, 
{ /* PROBESTATUS    */ NA, NA, RD_FCUST, SalProbeStatusCommand, NA, 
{ /* PROTARY        */ NA, NA, RD_FCUST | WR_FCUST, SalReadPositionModuloCommand, SalPositionModuloCommand, 
{ /* PTPTE          */ s8_Units_Pos, NA, RD_DPTR, &AX0_u32_Ptp_Target_Err_Lo, NA, 
{ /* PTPVCMD        */ s8_Units_Vel_Ptp, NA, RD_DPTR, &AX0_s32_Pos_Vcmd, NA, 
{ /* PWM50          */ NA, NA, RD_DPTR | WR_DPTR, &u16_Pwm_50_Percent, &u16_Pwm_50_Percent, 
{ /* PWMFRQ         */ NA, "kHz", RD_DPTR | WR_FPTR0, &u32_Pwm_Freq, SalPwmFreqCommand, 
{ /* PWMSATFLAG     */ NA, NA, RD_DPTR, &AX0_s16_Pwm_Sat_Flag, NA, 
{ /* PWMU           */ NA, NA, RD_DPTR, &AX0_s16_DQ_Vref_U, NA, 
{ /* PWMV           */ NA, NA, RD_DPTR, &AX0_s16_DQ_Vref_V, NA, 
{ /* PWMW           */ NA, NA, RD_DPTR, &AX0_s16_DQ_Vref_W, NA, 
{ /* READCODE       */ NA, NA, RD_FCUST0, ReadFPGACodeCommand, NA, 
{ /* READY          */ NA, NA, RD_FPTR0, SalReadReadyCommand, NA, 
{ /* RECDONE        */ NA, NA, RD_FPTR2, SalRecdoneCommand, NA, 
{ /* RECING         */ NA, NA, RD_FPTR2, SalRecordingStatusCommand, NA, 
{ /* RECLATCHEDLIST */ NA, NA, RD_FCUST0, RecLatchedListCommand, NA, 
{ /* RECLIST        */ NA, NA, RD_FCUST0, RecListCommand, NA, 
{ /* RECPARAMLIST   */ NA, NA, RD_FCUST0, RecParamListCommand, NA, 
{ /* RECOFF         */ NA, NA, RD_FCUST0, RecordOffCommand, NA, 
{ /* RECORD         */ NA, NA, RD_FCUST0 | WR_FCUST0, RecordCommand, RecordCommand, 
{ /* RECPSD         */ NA, NA, RD_DPTR | WR_FCUST, &u32_Rec_Psd, RecPSDCommand, 
{ /* RECPSDST       */ NA, NA, RD_FPTR1, RecPsdStCommand, NA, 
{ /* RECRDY         */ NA, NA, RD_FPTR2, SalRecordingReadyCommand, NA, 
{ /* RECTRIG        */ NA, NA, RD_FCUST0 | WR_FCUST0, RecTrigCommand, RecTrigCommand, 
{ /* RECTRIGLIST    */ NA, NA, RD_FCUST0, RecTrigListCommand, NA, 
{ /* RECTRIGLOCATION*/ NA, NA, RD_DPTR, &s16_Trig_Offset_From_Rec_Start, NA, 
{ /* RECSEGSIZE     */ NA, NA, RD_DPTR, &u16_Size_Of_Segment_To_Print, NA, 
{ /* RECSEGNUM      */ NA, NA, RD_DPTR, &u16_Num_Of_Segments, NA, 
{ /* RECSEGNUMUSR   */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Num_Of_Segments_Usr, SalWriteSegmentNum, 
{ /* REFOFFSETVAL   */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Home_Offset_User_Lo, SalSavedHomeOfstCommand, 
{ /* REGENFLTMODE   */ NA, NA, RD_DPTR | WR_DPTR, &u16_Regen_Flt_Mode, &u16_Regen_Flt_Mode, 
{ /* REGENMAXONTIME */ NA, "ms", RD_DPTR | WR_DPTR, &u16_Regen_Max_On_Time_ms, &u16_Regen_Max_On_Time_ms, 
{ /* REGENMAXPOW    */ NA, "W", RD_DPTR, &s16_Max_Regen_Power, NA, 
{ /* REGENPOW       */ NA, "W", RD_DPTR | WR_FPTR0, &s16_Regen_Resistor_Power, SalSetRegenResistorPower, 
{ /* REGENRES       */ NA, "Ohm", RD_DPTR | WR_FPTR0, &s16_Regen_Resistor_Resistance, SalSetRegenResistorResistance, 
{ /* RELAY          */ NA, NA, RD_FPTR2, SalRelayCommand, NA, 
{ /* RELAYMODE      */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Relay_Mode, SalRelayModeCommand, 
{ /* REMOTE         */ NA, NA, RD_DPTR, &u16_Remote_Indication, NA, 
{ /* RESAMPLRANGE   */ NA, "%", RD_DPTR | WR_FPTR0, &u16_Out_of_Range_Percent, SalOutOfRangeCommand, 
{ /* RESBW          */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_ResBw, SalResBwCommand, 
{ /* RESFILTMODE    */ NA, NA, RD_DPTR | WR_DPTR, &AX0_u16_Res_Filt, &AX0_u16_Res_Filt, 
{ /* RESIDENT       */ NA, NA, RD_FCUST0, ResidentCommand, NA, 
{ /* SAFEPOS1       */ NA, NA, RD_DPTR, &u64_Hdsl_Safe1_Pos, NA, 
{ /* SAFEPOS2       */ NA, NA, RD_DPTR, &u64_Hdsl_Safe2_Pos, NA, 
{ /* SAVE           */ NA, NA, RD_FPTR1, SalSaveToFlash, NA, 
{ /* SDHACK         */ NA, NA, RD_FPTR1, SalSdHackCommand, NA, 
{ /* SFB            */ s8_Units_Pos_Sfb, NA, RD_DPTR, &AX0_u32_SFB_Pos_Fdbk_Lo, NA, 
{ /* SFBACC         */ s8_Units_Acc_Dec_For_Pos_Sfb, NA, RD_DPTR | WR_FPTR0, &u64_Sfb_AccRate, SalSfbAccCommand, 
{ /* SFBDEC         */ s8_Units_Acc_Dec_For_Pos_Sfb, NA, RD_DPTR | WR_FPTR0, &u64_Sfb_DecRate, SalSfbDecCommand, 
{ /* SFBDIR         */ NA, NA, RD_DPTR | WR_FPTR0, &s16_SFB_Direction, SalSfbDirectionCommand, 
{ /* SFBENCTYPE     */ NA, NA, RD_DPTR | WR_FPTR0, &AX0_s16_Sfb_Enc_Type, SalSfbEncTypeCommand, 
{ /* SFBINT         */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Load_Enc_Interpolation, SalLoadEncInterpolationCommand, 
{ /* SFBMODE        */ NA, NA, RD_DPTR | WR_FPTR0, &s16_SFBMode, SalSFBModeCommand, 
{ /* SFBOFFSET      */ s8_Units_Pos_Sfb, NA, RD_DPTR | WR_FPTR0, &AX0_u32_Sfb_Pos_Fdbk_Offset_Lo, SalSfbOffCommand, 
{ /* SFBPE          */ s8_Units_Pos_Sfb, NA, RD_DPTR, &s64_Sfb_Pos_Error_Internal, NA, 
{ /* SFBPEMAX       */ s8_Units_Pos_Sfb, NA, RD_DPTR | WR_FPTR0, &u64_Sfb_Pos_Error_Max_Internal, SalWriteSfbPositionErrorMax, 
{ /* SFBRES         */ s8_Units_Rot_Lin_ENCRES, NA, RD_DPTR | WR_FPTR0, &u32_User_Sec_Enc_Res, SalSecEncResCommand, 
{ /* SFBTYPE        */ NA, NA, RD_DPTR | WR_FPTR0, &u16_SFBType_User, SalSFBTypeCommand, 
{ /* SFBVCBLDIST    */ s8_Units_Pos, NA, RD_DPTR | WR_FPTR0, &s64_Voltage_Correct_Backlash_Position, SalWriteSfbVcBacklashDistance, 
{ /* SFBVCDWELLTIME */ NA, "ms", RD_DPTR | WR_DPTR, &s16_Voltage_Correct_Dwell_Time, &s16_Voltage_Correct_Dwell_Time, 
{ /* SFBVCILIM      */ NA, "A", RD_DPTR | WR_FPTR0, &s32_Voltage_Correction_Current_Limit, SalSFBVoltageCorrectCurrentLimit, 
{ /* SFBVCINFO      */ NA, NA, RD_FCUST, SalWriteVoltageCorrectionInfoToRs232, NA, 
{ /* SFBVCINFO2     */ NA, NA, RD_FCUST, SalWriteVoltageCorrection2InfoToRs232, NA, 
{ /* SFBVCMANUAL    */ NA, NA, RD_FPTR1, SalManualCalibrationProcess, NA, 
{ /* SFBVCMD        */ s8_Units_Vel_Ptp, NA, RD_DPTR, &AX0_s32_Dual_Loop_Vcmd, NA, 
{ /* SFBVCMOVE      */ NA, NA, RD_FPTR1, SalSFBStartCalibrationProcess, NA, 
{ /* SFBVCSECT      */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Voltage_Correct_Number_Of_Sections, SalSFBNumberOfSectors, 
{ /* SFBVCSECT2     */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Voltage_Correct_2_Number_Of_Sections, SalSFBNumberOfSectors2, 
{ /* SFBVCSPDFAST   */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_Voltage_Correct_Fast_Speed, SalSFBVoltageCorrectFastSpeed, 
{ /* SFBVCSPDSLOW   */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_Voltage_Correct_Slow_Speed, SalSFBVoltageCorrectSlowSpeed, 
{ /* SFBVCVLOW      */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &s16_Slow_Movement_Lower_Voltage, SalSFBVoltageCorrectSlowSpeedLowerVoltLevel, 
{ /* SFBVCVUP       */ s8_Units_Analog_IO, NA, RD_DPTR | WR_FPTR0, &s16_Slow_Movement_Upper_Voltage, SalSFBVoltageCorrectSlowSpeedUpperVoltLevel, 
{ /* SFBVEL         */  s8_Units_Vel_Out_Loop_Sfb, NA, RD_DPTR, &AX0_s32_Sfb_Vel_Var_Fb_0, NA, 
{ /* SFBVLIM        */ s8_Units_Vel_Out_Loop_Sfb, NA, RD_DPTR | WR_FPTR0, &s32_Sfb_V_Lim, SalSfbVLimCommand, 
{ /* SININIT        */ NA, NA, RD_FCUST, SininitCommand, NA, 
{ /* SININITMODE    */ NA, NA, RD_DPTR | WR_FPTR0, &u8_SinInitMode, SalSinInitModeCommand, 
{ /* SININITST      */ NA, NA, RD_FPTR0, SalReadSinInitStatusCommand, NA, 
{ /* SINPARAM       */ NA, NA, RD_FCUST, SinparamCommand, NA, 
{ /* SKTEMPVOLT     */ NA, "deg", RD_FCUST, SalReadSankyo, NA, 
{ /* SKTURNRESET    */ NA, NA, RD_FPTR1, SalSkTurnResetCommand, NA, 
{ /* SOFTWARECONTROL*/ NA, NA, RD_DPTR | WR_FPTR0, &u16_Hmi_Key_Disable, SalSoftwareControlCommand, 
{ /* SPDOBSRVRACC   */ NA, NA, RD_DPTR, &AX0_s32_Observer_Acc, NA, 
{ /* SPDOBSRVRKACC  */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Speed_Observer_Acc_Gain, SalSpeedObserverAccGainCommand, 
{ /* SPDOBSRVRKV    */ NA, NA, RD_DPTR | WR_FPTR0, &s32_Speed_Observer_Spd_Gain, SalSpeedObserverSpdGainCommand, 
{ /* SPDOBSRVRLMJR  */ NA, NA, RD_DPTR | WR_FPTR0, &u32_Speed_Observer_Spd_LMJR, SalSpeedObserverLMJRCommand, 
{ /* SPDOBSRVRVEL   */ s8_Units_Vel_In_Loop, NA, RD_DPTR, &AX0_s16_Observer_Vel_Var_Fb_0, NA, 
{ /* SRVSNSFWDNLD   */ NA, NA, RD_FPTR1, SalSrvSnsFWDnLdCommand, NA, 
{ /* SRVSNSINFO     */ NA, NA, RD_FPTR1, SalSrvSnsInfoCommand, NA, 
{ /* SRVSNSREAD     */ NA, NA, RD_FCUST, SalSrvSnsReadAddr, NA, 
{ /* SRVSNSSENDCMD  */ NA, NA, RD_FCUST, SalSrvSnsSendCmd, NA, 
{ /* SRVSNSSMDATA   */ NA, NA, RD_DPTR, &AX0_u32_SrvSns_SubModeData, NA, 
{ /* SRVSNSWRITE    */ NA, NA, RD_FCUST, SalSrvSnsWriteAddr, NA, 
{ /* ST             */ NA, NA, RD_FPTR1, SalStCommand, NA, 
{ /* STALLTIME      */ NA, "ms", RD_DPTR | WR_DPTR, &s32_Stall_Time, &s32_Stall_Time, 
{ /* STALLVEL       */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &u32_Stall_Vel, SalStallVelCommand, 
{ /* STAT           */ NA, NA, RD_FPTR1, StatCommand, NA, 
{ /* STATUS         */ NA, NA, RD_FPTR1, StatusCommand , NA, 
{ /* STEP           */ NA, NA, RD_FCUST | WR_FCUST, SalStepCommand, SalStepCommand, 
{ /* STOP           */ NA, NA, RD_FPTR1, StopCommand, NA, 
{ /* STOPDIST       */ NA, "deg", RD_DPTR | WR_FPTR0, &u16_Stop_Dist_User, SalStopDistCommand, 
{ /* STOPPED        */ NA, NA, RD_DPTR | WR_DPTR, &AX0_s16_Stopped, &AX0_s16_Stopped, 
{ /* STOPPEDDURATE  */ NA, "ms", RD_DPTR | WR_DPTR, &s32_Stopped_Output_Duration, &s32_Stopped_Output_Duration, 
{ /* SWEN           */ NA, NA, RD_FPTR0, SalReadSwenCommand, NA, 
{ /* SWENMODE       */ NA, NA, RD_DPTR | WR_FPTR0, &u8_SwEnMode, SalSwEnModeCommand, 
{ /* SWFEATURES     */ NA, NA, RD_FCUST, SalSwFeaturesCommand, NA, 
{ /* T              */ NA, NA, RD_FCUST | WR_FCUST, SalReadTorqueCommand, SalTorqueCommand, 
{ /* TESTVAR        */ NA, NA, RD_FPTR1, TestVarCommand, NA, 
{ /* TF             */ NA, "%", RD_DPTR | WR_FPTR0, &u16_TF, SalTFCommand, 
{ /* THERM          */ NA, NA, RD_DPTR, &u16_Therm_Value, NA, 
{ /* THERMCLEARLEVEL*/ NA, "Ohm", RD_DPTR | WR_DPTR, &u32_Therm_Clear_Level, &u32_Therm_Clear_Level, 
{ /* THERMODE       */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Therm_Mode, SalThermModeCommand, 
{ /* THERMREADOUT   */ NA, NA, RD_FCUST, SalReadThermCommand, NA, 
{ /* THERMTIME      */ NA, "s", RD_DPTR | WR_DPTR, &u16_Therm_Time, &u16_Therm_Time, 
{ /* THERMTRIPLEVEL */ NA, "Ohm", RD_DPTR | WR_DPTR, &u32_Therm_Trip_Level, &u32_Therm_Trip_Level, 
{ /* THERMTYPE      */ NA, NA, RD_DPTR | WR_DPTR, &u16_Therm_Type, &u16_Therm_Type, 
{ /* TIMESTAMP      */ NA, NA, RD_FCUST | WR_FCUST, SalTimeStampLocations, SalTimeStampLocations, 
{ /* TIMESTAMPBG    */ NA, NA, RD_FCUST | WR_FCUST, SalTimeStampBgLocations, SalTimeStampBgLocations, 
{ /* TMABSREAD      */ NA, NA, RD_FCUST | WR_FCUST, SalTmAbsRead, SalTmAbsRead, 
{ /* TMABSWRITE     */ NA, NA, RD_FCUST | WR_FCUST, SalTmAbsWrite, SalTmAbsWrite, 
{ /* TMCOMMAND      */ NA, NA, RD_FCUST | WR_FCUST, SalTmCommandHack, SalTmCommandHack, 
{ /* TMTEMP         */ NA, "deg", RD_FPTR1, SalReadTmTemp, NA, 
{ /* TMTEMPTHRESH   */ NA, "deg", RD_FCUST | WR_FCUST, SalTmTempThresh, SalTmTempThresh, 
{ /* TMTEMPTHRESHX  */ NA, "deg", RD_FCUST | WR_FCUST, SalTmTempThreshExtended, SalTmTempThreshExtended, 
{ /* TMTURNRESET    */ NA, NA, RD_FPTR1, SalTmTurnResetCommand, NA, 
{ /* TMZEROPOS      */ NA, NA, RD_FPTR1, SalTmZeroPosCommand, NA, 
{ /* TRUN           */ NA, NA, RD_FCUST0, TrunCommand, NA, 
{ /* UNITSLINACC    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Acc_Dec_Linear, SalUnitsAccDecLinearCommand, 
{ /* UNITSLINPOS    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Pos_Linear, SalUnitsPosLinearCommand, 
{ /* UNITSLINVEL    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Vel_Linear, SalUnitsVelLinearCommand, 
{ /* UNITSROTACC    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Acc_Dec_Rotary, SalUnitsAccDecRotaryCommand, 
{ /* UNITSROTPOS    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Pos_Rotary, SalUnitsPosRotaryCommand, 
{ /* UNITSROTVEL    */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Units_Vel_Rotary, SalUnitsVelRotaryCommand, 
{ /* USERPARAM      */ NA, NA, RD_DPTR | WR_DPTR, &u32_User_Param, &u32_User_Param, 
{ /* UVMODE         */ NA, NA, RD_DPTR | WR_FPTR0, &u16_Uv_Mode, SalUvModeCommand, 
{ /* UVRECOVER      */ NA, NA, RD_DPTR | WR_DPTR, &u16_Uv_Recover, &u16_Uv_Recover, 
{ /* UVTHRESH       */ NA, "V", RD_DPTR | WR_FPTR0, &u16_UV_Threshold, SalUVThreshCommand, 
{ /* UVTIME         */ NA, "s", RD_DPTR | WR_DPTR, &u16_Uv_Time, &u16_Uv_Time, 
{ /* V              */ s8_Units_Vel_Out_Loop, NA, RD_DPTR, &AX0_s32_Vel_Fb_Info, NA, 
{ /* VBUS           */ NA, "V", RD_DPTR | WR_FPTR0, &s16_Vbus, SalVbusCommand, 
{ /* VBUSREADOUT    */ NA, "V", RD_DPTR, &u16_Vbus_Volts, NA, 
{ /* VCMD           */ s8_Units_Vel_In_Loop, NA, RD_DPTR, &AX0_s16_Vel_Var_Ref_Unfilt, NA, 
{ /* VD             */ NA, NA, RD_FPTR1 | WR_FPTR1, SalReadVdCommand, SalVdCommand, 
{ /* VE             */ s8_Units_Vel_In_Loop, NA, RD_DPTR, &AX0_s16_Vel_Var_Err, NA, 
{ /* VELCMDMOVEAVG  */ NA, "us", RD_DPTR | WR_FPTR0, &u32_Vel_Moving_Average_Filter_Time, SalWriteVelMovingAverageFilterTime, 
{ /* VELCONTROLMODE */ NA, NA, RD_DPTR | WR_FPTR0, &u8_CompMode, SalCompModeCommand, 
{ /* VELCONTROLOUT  */ s8_Units_Cur, NA, RD_DPTR, &AX0_s16_Crrnt_Lp_Inp, NA, 
{ /* VELDESIGN      */ NA, NA, RD_FPTR1, VelDesignCommand, NA, 
{ /* VELFILTFRQ     */ NA, "Hz", RD_DPTR | WR_FPTR0, &u16_Vfilt_Frq, SalVfiltFrqCommand, 
{ /* VELFILTMODE    */ NA, NA, RD_DPTR | WR_FPTR0, &u8_VelFiltMode, SalVelFiltModeCommand, 
{ /* VEMAX          */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_DPTR, &u32_Ve_Max, &u32_Ve_Max, 
{ /* VER            */ NA, NA, RD_FCUST0, VerCommand, NA, 
{ /* VF             */ NA, NA, RD_FPTR1 | WR_FPTR1, SalReadVfCommand, SalVfCommand, 
{ /* VFEXT          */ NA, NA, RD_FPTR1 | WR_FPTR1, SalReadVfExtCommand, SalVfExtCommand, 
{ /* VFI            */ NA, NA, RD_FPTR1 | WR_FPTR1, SalReadVfiCommand, SalVfiCommand, 
{ /* VG             */ NA, NA, RD_DPTR | WR_FPTR0, &s16_App_Gain, SalVgCommand, 
{ /* VH             */ NA, NA, RD_FPTR1 | WR_FPTR1, SalReadVhCommand, SalVhCommand, 
{ /* VINT           */ s8_Units_Vel_In_Loop, NA, RD_DPTR, &AX0_s16_Vel_Var_Fb_0, NA, 
{ /* VINT1          */ s8_Units_Vel_In_Loop, NA, RD_DPTR, &AX0_s16_Vel_Var_Fb_0, NA, 
{ /* VLIM           */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_V_Lim_Design, SalVLimCommand, 
{ /* VLIM2          */ s8_Units_Vel_Out_Loop, NA, RD_DPTR | WR_FPTR0, &s32_V_Lim2_Design, SalVLim2Command, 
{ /* VMAX           */ s8_Units_Vel_Out_Loop, NA, RD_DPTR, &s32_Vmax, NA, 
{ /* VR             */ NA, NA, RD_FPTR1 | WR_FPTR1, SalReadVrCommand, SalVrCommand, 
{ /* VRDHSCALE      */ NA, NA, RD_FCUST | WR_FCUST, SalReadVRDHScaleCommand, SalVRDHScaleCommand, 
{ /* WNSERR         */ NA, NA, RD_FPTR1, WNSErrorCommand, NA, 
{ /* WRITEKEY       */ NA, NA, RD_FCUST0 | WR_FCUST0, SalWriteSecurityKeyCommand, SalWriteSecurityKeyCommand, 
{ /* WRN            */ NA, NA, RD_FPTR1, PrintCurrentWarnings, NA, 
{ /* XENCRES        */ s8_Units_Rot_Lin_ENCRES, NA, RD_DPTR | WR_FPTR0, &u32_External_Enc_Res, SalExternalEncResCommand, 
{ /* ZERO           */ NA, NA, RD_DPTR | WR_FPTR0, &s16_Zero_Mode, SalZeroCommand, 
{ /* ZEROST         */ NA, NA, RD_FPTR1, ZeroStatusCommand, NA, 
{ /* P_P10-37_BISSCFIELDS_1NA, NA, RD_DPTR | WR_DPTR, &s64_Biss_1, &s64_Biss_1, 
{ /* P_P10-38_BISSCFIELDS_2NA, NA, RD_DPTR | WR_DPTR, &s64_Biss_2, &s64_Biss_2, 
{ /* P_P10-39_BISSCFIELDS_3NA, NA, RD_DPTR | WR_DPTR, &s64_Biss_3, &s64_Biss_3, 
{ /* P_P10-40_BISSCFIELDS_4 NA, NA, RD_DPTR | WR_FPTR0, &s64_Biss_4, SalHmiBiss, 
{ /* P_P10-41_ACTUALSPEED_HMI_RPMNA, NA, RD_FPTR0, SalActualSpeedHmiRpm, NA, 
{ /* P_P10-42_CURRENT/ s8_Units_Cur, NA, RD_DPTR, &u32_EqCrrnt, NA, 
{ /* P_P10-43_DIGITAL_INPUTS_HMINA, NA, RD_FCUST0, CdhdHmiDisplayCurrentInputs, NA, 
{ /* P_P10-44_DIGITAL_INPUTS_HMI_EXNA, NA, RD_FCUST0, CdhdHmiDisplayCurrentInputsEx, NA, 
{ /* P_P10-45_DIGITAL_OUTPUTS_HMINA, NA, RD_FCUST0, CdhdHmiDisplayCurrentOutputs, NA, 
{ /* P_P10-46_ENABLE_DISABLENA, NA, RD_FPTR0, SalSwitchEnableDisable, NA, 
{ /* P_P10-47_ACTUALPOSITION_HMI_DEGNA, NA, RD_FPTR0, SalActualPositionHmiDeg, NA, 
{ /* P_P10-48_ACTUALPOSITION_HMI_REVSNA, NA, RD_FPTR0, SalActualPositionHmiRevs, NA, 
{ /* P_P10-49_HWPEXT*/ NA, "counts", RD_DPTR, &AX0_s16_Hwpext_Value, NA, 
{ /* P_P10-50_INPUT_1_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_2_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_3_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_4_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_5_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_6_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_7_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_8_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_9_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_10_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_INPUT_11_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadInModeCommandHmi, SalInModeCommandHmi, 
{ /* P_P10-50_ININV_1/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_2/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_3/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_4/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_5/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_6/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_7/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_8/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_9/ NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_10 NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_ININV_11 NA, NA, RD_FPTR0 | WR_FCUST0, SalReadInPolarCommandHmi, SalInPolarCommandHmi, 
{ /* P_P10-50_OUTPUT_1_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUTPUT_2_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUTPUT_3_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUTPUT_4_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUTPUT_5_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUTPUT_6_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUTPUT_7_MODENA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutModeCommandHmi, SalOutModeCommandHmi, 
{ /* P_P10-50_OUT_INV_1NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_P10-50_OUT_INV_2NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_P10-50_OUT_INV_3NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_P10-50_OUT_INV_4NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_P10-50_OUT_INV_5NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_P10-50_OUT_INV_6NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_P10-50_OUT_INV_7NA, NA, RD_FPTR0 | WR_FCUST0, SalReadOutPolarCommandHmi, SalOutPolarCommandHmi, 
{ /* P_CAN_COBID_SYNC/ NA, NA, RD_DPTR | WR_DPTR, &u32_CobId_Sync, &u32_CobId_Sync, 
{ /* P_CAN_COMM_CYCLE_PERIODNA, NA, RD_DPTR | WR_DPTR, &u32_Comm_Cycle_Period, &u32_Comm_Cycle_Period, 
{ /* P_CAN_SYNC_WINDOW_LENGTHNA, NA, RD_DPTR | WR_DPTR, &u32_Sync_Window_Length, &u32_Sync_Window_Length, 
{ /* P_CAN_GUARD_TIME/ NA, NA, RD_DPTR | WR_DPTR, &u16_Guard_Time, &u16_Guard_Time, 
{ /* P_CAN_LIFE_TIME_FACTORNA, NA, RD_DPTR | WR_DPTR, &u8_Life_Time_Factor, &u8_Life_Time_Factor, 
{ /* P_CAN_COBID_EMCY/ NA, NA, RD_DPTR | WR_DPTR, &u32_CobId_Emcy, &u32_CobId_Emcy, 
{ /* P_CAN_INHIBIT_TIME_EMERGENCYNA, NA, RD_DPTR | WR_DPTR, &u16_Inhibit_Time_Emcy, &u16_Inhibit_Time_Emcy, 
{ /* P_CAN_HB_CONSUMER1NA, NA, RD_DPTR | WR_DPTR, &u32_HeartBeat_Consumer1, &u32_HeartBeat_Consumer1, 
{ /* P_CAN_HB_CONSUMER2NA, NA, RD_DPTR | WR_DPTR, &u32_HeartBeat_Consumer2, &u32_HeartBeat_Consumer2, 
{ /* P_CAN_HB_CONSUMER3NA, NA, RD_DPTR | WR_DPTR, &u32_HeartBeat_Consumer3, &u32_HeartBeat_Consumer3, 
{ /* P_CAN_HB_PRODUCER NA, NA, RD_DPTR | WR_DPTR, &u16_HeartBeat_Producer, &u16_HeartBeat_Producer, 
{ /* P_CAN_SYN_COUNTER_OVERFLOWNA, NA, RD_DPTR | WR_DPTR, &u8_Sync_Counter_Overflow, &u8_Sync_Counter_Overflow, 
{ /* P_CAN_ERROR_BEHAVIOR_SUB1NA, NA, RD_DPTR | WR_DPTR, &u8_Error_Behavior_Sub1, &u8_Error_Behavior_Sub1, 
{ /* P_CAN_SDO1_COBID_CLIENT_SERVERNA, NA, RD_DPTR | WR_DPTR, &u32_SDO1_CobId_Client_Server, &u32_SDO1_CobId_Client_Server, 
{ /* P_CAN_SDO1_COBID_SERVER_CLIENTNA, NA, RD_DPTR | WR_DPTR, &u32_SDO1_CobId_Server_Client, &u32_SDO1_CobId_Server_Client, 
{ /* P_CAN_SDO2_COBID_CLIENT_SERVERNA, NA, RD_DPTR | WR_DPTR, &u32_SDO2_CobId_Client_Server, &u32_SDO2_CobId_Client_Server, 
{ /* P_CAN_SDO2_COBID_SERVER_CLIENTNA, NA, RD_DPTR | WR_DPTR, &u32_SDO2_CobId_Server_Client, &u32_SDO2_CobId_Server_Client, 
{ /* P_CAN_SDO2_CLIENT_NODE_IDNA, NA, RD_DPTR | WR_DPTR, &u32_SDO2_Client_NodeId, &u32_SDO2_Client_NodeId, 
{ /* P_CAN_RPDO1_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_CobId, &u32_Rpdo1_CobId, 
{ /* P_CAN_RPDO1_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo1_Transmission_Type, &u8_Rpdo1_Transmission_Type, 
{ /* P_CAN_RPDO1_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Rpdo1_Inhibit_Time, &u16_Rpdo1_Inhibit_Time, 
{ /* P_CAN_RPDO1_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo1_NumMapping, &u8_Rpdo1_NumMapping, 
{ /* P_CAN_RPDO1_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_Mapping1, &u32_Rpdo1_Mapping1, 
{ /* P_CAN_RPDO1_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_Mapping2, &u32_Rpdo1_Mapping2, 
{ /* P_CAN_RPDO1_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_Mapping3, &u32_Rpdo1_Mapping3, 
{ /* P_CAN_RPDO1_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_Mapping4, &u32_Rpdo1_Mapping4, 
{ /* P_CAN_RPDO1_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_Mapping5, &u32_Rpdo1_Mapping5, 
{ /* P_CAN_RPDO1_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo1_Mapping6, &u32_Rpdo1_Mapping6, 
{ /* P_CAN_RPDO2_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_CobId, &u32_Rpdo2_CobId, 
{ /* P_CAN_RPDO2_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo2_Transmission_Type, &u8_Rpdo2_Transmission_Type, 
{ /* P_CAN_RPDO2_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Rpdo2_Inhibit_Time, &u16_Rpdo2_Inhibit_Time, 
{ /* P_CAN_RPDO2_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo2_NumMapping, &u8_Rpdo2_NumMapping, 
{ /* P_CAN_RPDO2_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_Mapping1, &u32_Rpdo2_Mapping1, 
{ /* P_CAN_RPDO2_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_Mapping2, &u32_Rpdo2_Mapping2, 
{ /* P_CAN_RPDO2_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_Mapping3, &u32_Rpdo2_Mapping3, 
{ /* P_CAN_RPDO2_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_Mapping4, &u32_Rpdo2_Mapping4, 
{ /* P_CAN_RPDO2_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_Mapping5, &u32_Rpdo2_Mapping5, 
{ /* P_CAN_RPDO2_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo2_Mapping6, &u32_Rpdo2_Mapping6, 
{ /* P_CAN_RPDO3_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_CobId, &u32_Rpdo3_CobId, 
{ /* P_CAN_RPDO3_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo3_Transmission_Type, &u8_Rpdo3_Transmission_Type, 
{ /* P_CAN_RPDO3_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Rpdo3_Inhibit_Time, &u16_Rpdo3_Inhibit_Time, 
{ /* P_CAN_RPDO3_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo3_NumMapping, &u8_Rpdo3_NumMapping, 
{ /* P_CAN_RPDO3_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_Mapping1, &u32_Rpdo3_Mapping1, 
{ /* P_CAN_RPDO3_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_Mapping2, &u32_Rpdo3_Mapping2, 
{ /* P_CAN_RPDO3_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_Mapping3, &u32_Rpdo3_Mapping3, 
{ /* P_CAN_RPDO3_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_Mapping4, &u32_Rpdo3_Mapping4, 
{ /* P_CAN_RPDO3_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_Mapping5, &u32_Rpdo3_Mapping5, 
{ /* P_CAN_RPDO3_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo3_Mapping6, &u32_Rpdo3_Mapping6, 
{ /* P_CAN_RPDO4_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_CobId, &u32_Rpdo4_CobId, 
{ /* P_CAN_RPDO4_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo4_Transmission_Type, &u8_Rpdo4_Transmission_Type, 
{ /* P_CAN_RPDO4_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Rpdo4_Inhibit_Time, &u16_Rpdo4_Inhibit_Time, 
{ /* P_CAN_RPDO4_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Rpdo4_NumMapping, &u8_Rpdo4_NumMapping, 
{ /* P_CAN_RPDO4_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_Mapping1, &u32_Rpdo4_Mapping1, 
{ /* P_CAN_RPDO4_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_Mapping2, &u32_Rpdo4_Mapping2, 
{ /* P_CAN_RPDO4_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_Mapping3, &u32_Rpdo4_Mapping3, 
{ /* P_CAN_RPDO4_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_Mapping4, &u32_Rpdo4_Mapping4, 
{ /* P_CAN_RPDO4_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_Mapping5, &u32_Rpdo4_Mapping5, 
{ /* P_CAN_RPDO4_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Rpdo4_Mapping6, &u32_Rpdo4_Mapping6, 
{ /* P_CAN_TPDO1_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_CobId, &u32_Tpdo1_CobId, 
{ /* P_CAN_TPDO1_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo1_Transmission_Type, &u8_Tpdo1_Transmission_Type, 
{ /* P_CAN_TPDO1_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo1_Inhibit_Time, &u16_Tpdo1_Inhibit_Time, 
{ /* P_CAN_TPDO1_EVENT_TIMERNA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo1_Event_Timer, &u16_Tpdo1_Event_Timer, 
{ /* P_CAN_TPDO1_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo1_NumMapping, &u8_Tpdo1_NumMapping, 
{ /* P_CAN_TPDO1_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_Mapping1, &u32_Tpdo1_Mapping1, 
{ /* P_CAN_TPDO1_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_Mapping2, &u32_Tpdo1_Mapping2, 
{ /* P_CAN_TPDO1_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_Mapping3, &u32_Tpdo1_Mapping3, 
{ /* P_CAN_TPDO1_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_Mapping4, &u32_Tpdo1_Mapping4, 
{ /* P_CAN_TPDO1_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_Mapping5, &u32_Tpdo1_Mapping5, 
{ /* P_CAN_TPDO1_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo1_Mapping6, &u32_Tpdo1_Mapping6, 
{ /* P_CAN_TPDO2_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_CobId, &u32_Tpdo2_CobId, 
{ /* P_CAN_TPDO2_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo2_Transmission_Type, &u8_Tpdo2_Transmission_Type, 
{ /* P_CAN_TPDO2_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo2_Inhibit_Time, &u16_Tpdo2_Inhibit_Time, 
{ /* P_CAN_TPDO2_EVENT_TIMERNA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo2_Event_Timer, &u16_Tpdo2_Event_Timer, 
{ /* P_CAN_TPDO2_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo2_NumMapping, &u8_Tpdo2_NumMapping, 
{ /* P_CAN_TPDO2_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_Mapping1, &u32_Tpdo2_Mapping1, 
{ /* P_CAN_TPDO2_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_Mapping2, &u32_Tpdo2_Mapping2, 
{ /* P_CAN_TPDO2_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_Mapping3, &u32_Tpdo2_Mapping3, 
{ /* P_CAN_TPDO2_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_Mapping4, &u32_Tpdo2_Mapping4, 
{ /* P_CAN_TPDO2_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_Mapping5, &u32_Tpdo2_Mapping5, 
{ /* P_CAN_TPDO2_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo2_Mapping6, &u32_Tpdo2_Mapping6, 
{ /* P_CAN_TPDO3_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_CobId, &u32_Tpdo3_CobId, 
{ /* P_CAN_TPDO3_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo3_Transmission_Type, &u8_Tpdo3_Transmission_Type, 
{ /* P_CAN_TPDO3_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo3_Inhibit_Time, &u16_Tpdo3_Inhibit_Time, 
{ /* P_CAN_TPDO3_EVENT_TIMERNA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo3_Event_Timer, &u16_Tpdo3_Event_Timer, 
{ /* P_CAN_TPDO3_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo3_NumMapping, &u8_Tpdo3_NumMapping, 
{ /* P_CAN_TPDO3_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_Mapping1, &u32_Tpdo3_Mapping1, 
{ /* P_CAN_TPDO3_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_Mapping2, &u32_Tpdo3_Mapping2, 
{ /* P_CAN_TPDO3_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_Mapping3, &u32_Tpdo3_Mapping3, 
{ /* P_CAN_TPDO3_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_Mapping4, &u32_Tpdo3_Mapping4, 
{ /* P_CAN_TPDO3_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_Mapping5, &u32_Tpdo3_Mapping5, 
{ /* P_CAN_TPDO3_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo3_Mapping6, &u32_Tpdo3_Mapping6, 
{ /* P_CAN_TPDO4_COBID NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_CobId, &u32_Tpdo4_CobId, 
{ /* P_CAN_TPDO4_TRANSMISSION_TYPENA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo4_Transmission_Type, &u8_Tpdo4_Transmission_Type, 
{ /* P_CAN_TPDO4_INHIBIT_TIMENA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo4_Inhibit_Time, &u16_Tpdo4_Inhibit_Time, 
{ /* P_CAN_TPDO4_EVENT_TIMERNA, NA, RD_DPTR | WR_DPTR, &u16_Tpdo4_Event_Timer, &u16_Tpdo4_Event_Timer, 
{ /* P_CAN_TPDO4_NUM_MAPPINGNA, NA, RD_DPTR | WR_DPTR, &u8_Tpdo4_NumMapping, &u8_Tpdo4_NumMapping, 
{ /* P_CAN_TPDO4_MAP1/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_Mapping1, &u32_Tpdo4_Mapping1, 
{ /* P_CAN_TPDO4_MAP2/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_Mapping2, &u32_Tpdo4_Mapping2, 
{ /* P_CAN_TPDO4_MAP3/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_Mapping3, &u32_Tpdo4_Mapping3, 
{ /* P_CAN_TPDO4_MAP4/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_Mapping4, &u32_Tpdo4_Mapping4, 
{ /* P_CAN_TPDO4_MAP5/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_Mapping5, &u32_Tpdo4_Mapping5, 
{ /* P_CAN_TPDO4_MAP6/ NA, NA, RD_DPTR | WR_DPTR, &u32_Tpdo4_Mapping6, &u32_Tpdo4_Mapping6, 
{ /* P_CAN_SERIAL_MAP_OVWRNA, NA, RD_DPT